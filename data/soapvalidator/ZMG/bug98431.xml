<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="folder1.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="folder2.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="message.subject1" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content1" value="content of the message${TIME}.${COUNTER}"/>
<t:property name="op.move" value="move"/>

<t:test_case testcaseid="Ping" type="deprecated" >
    <t:objective>Basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acctSetup_98431" type="deprecated" >
    <t:objective>Do account setup</t:objective>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_accountid1.id"/>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="account1.server"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
       <t:test id="sendmail1" required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${test_account1.name}'/>
                    <su> ${message.subject1}</su>
                    <mp ct="text/plain">
                        <content> ${message.content1}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message.id1"/>
        </t:response>
    </t:test>
    
	<t:test id="sendmail2" required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m origid="${message.id1}" rt="w">
                    <e t="t" a='${test_account1.name}'/>
                    <su> Fwd: ${message.subject1}</su>
                    <mp ct="text/plain">
                        <content> $ Forwarded content : {message.content1}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message.id1"/>
        </t:response>
    </t:test>
    
     <t:test id="searchConv">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="dateDesc" offset="0" limit="25">
                <query>in:${globals.sent}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:c" attr="id" set="conv.id1"/>
        </t:response>
    </t:test>
	

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="parentfolder.id"/>
		</t:response>
	</t:test>
	<t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder1.name}" l="${parentfolder.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder1.id"/>
        </t:response>
	</t:test>
</t:test_case>

<t:test_case testcaseid="bug98431" type="deprecated" bugids="98431">
    <t:objective>API for moving message/conversation belonging to an account/datasource into a folder given its path relative to account's mailbox</t:objective>
    <t:steps>
      1. Login into a test account
      2. Add an external account from preferences.
      3. Verify the connection and check it's mailboxes are available in folder tree.
      4. Move a conversation using attribute "acctRelPath" from primary account's Inbox to external account or vice a versa.
      5. Verify that move is successful.
    </t:steps>
    <t:test>
		<t:request>
			<TestDataSourceRequest xmlns="urn:zimbraMail">
				<imap host="${IMAP.Gmail.hostname}" port="${IMAP.Gmail.port}" username="${IMAP.Gmail.username}" password="${IMAP.Gmail.password}" l="${folder1.id}" connectionType="ssl" />
			</TestDataSourceRequest>
		</t:request>
		<t:response>
			 <t:select path="//mail:TestDataSourceResponse/mail:imap" attr="success" match="1"/>
		</t:response>
	</t:test>
	
	
	
	
	   <t:test>
        <t:request>
            <ConvActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.move}" acctRelPath="/New External Account1/Inbox"/>
            </ConvActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ConvActionResponse/mail:action" attr="op" match="${op.move}"/>
            <t:select path="//mail:ConvActionResponse/mail:action" attr="id" match="${conv.id1}"/>
        </t:response>
    </t:test> 
    
	
	   <t:test>
        <t:request>
            <ConvActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.move}" acctRelPath="/Inbox/${folder1.name}"/>
            </ConvActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ConvActionResponse/mail:action" attr="op" match="${op.move}"/>
            <t:select path="//mail:ConvActionResponse/mail:action" attr="id" match="${conv.id1}"/>
        </t:response>
    </t:test> 
    

	   <t:test>
        <t:request>
            <ConvActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.move}" acctRelPath="/Inbox/${folder2.name}"/>
            </ConvActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ConvActionResponse/mail:action" attr="op" match="${op.move}"/>
            <t:select path="//mail:ConvActionResponse/mail:action" attr="id" match="${conv.id1}"/>
        </t:response>
    </t:test> 
    
</t:test_case>


</t:tests>