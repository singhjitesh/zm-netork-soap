<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="tempdir" value="/tmp/volumes"/>
<t:property name="basedir" value="${tempdir}/volumeRoot${COUNTER}${TIME}"/>
<t:property name="type" value="2"/>

<t:property name="rootpath" value="${basedir}/rootpath${COUNTER}${TIME}"/>
<t:property name="name" value="Volume${COUNTER}${TIME}"/>

<t:property name="mgbits_default" value="8"/>
<t:property name="mbits_default" value="12"/>
<t:property name="fgbits_default" value="8"/>
<t:property name="fbits_default" value="12"/>
<t:property name="compressBlobs_default" value="1"/>
<t:property name="compressionThreshold_default" value="4096"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="AbortHsm01" type="smoke" areas="HSM" >
    <t:objective>Verify AbortHsm returns 0 when an HSM session was canceled. </t:objective>
	<t:steps>
					1. Login as the admin.
					2. Create a valid Secondary Volume. 
					3. Start the HSM process.
					4. Abort the HSM process.
	</t:steps>

    <t:test id="Login01" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="GetHsmStatus01" depends="CreateVolume01" required="true">
        <t:request>
			<GetHsmStatusRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
             <t:select path="//admin:GetHsmStatusResponse" />
        </t:response>
    </t:test>

	<!-- Clean up for the next test case -->
	<t:test >
		<t:request depends="GetHsmStatus_HsmRequest01" >
			<AbortHsmRequest  xmlns="urn:zimbraAdmin" action="cancel"/>
		</t:request>
	</t:test>

	<t:for start="1" end="180" break="response">
		<t:delay msec="1000"/>
		<t:test >
			<t:request>
				<GetHsmStatusRequest xmlns="urn:zimbraAdmin"/>
			</t:request>
			<t:response>
				<t:select path="//admin:GetHsmStatusResponse[@running='0']" query="response" />
			</t:response>
		</t:test>
	</t:for>

	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "mkdir -p ${rootpath}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>
	
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "chmod 777 ${rootpath}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>
	

     <t:test id="CreateVolume01" depends="Login01" required="true">
        <t:request>
			<CreateVolumeRequest xmlns="urn:zimbraAdmin">
				<volume type="${type}" name="${name}" rootpath="${rootpath}" mgbits="${mgbits_default}" mbits="${mbits_default}" fgbits="${fgbits_default}" fbits="${fbits_default}" compressBlobs="${compressBlobs_default}" compressionThreshold="${compressionThreshold_default}"/>
			</CreateVolumeRequest>
        </t:request>
        <t:response>
           <t:select path="//admin:CreateVolumeResponse/admin:volume" attr="id" set="volume.id"/>
        </t:response>
    </t:test>
 
 	<t:test id=" SetCurrentVolumeRequest" required="true">
		<t:request>
			<SetCurrentVolumeRequest xmlns="urn:zimbraAdmin">
				<id>${volume.id}</id>
				<type>${type}</type>
			</SetCurrentVolumeRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:SetCurrentVolumeResponse"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request id="HsmRequest01" depends="CreateVolume01" >
			<HsmRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
        <t:response>
             <t:select path="//admin:HsmResponse" />
        </t:response>
	</t:test>

    <t:test id="GetHsmStatus01" depends="HsmRequest01" required="true">
        <t:request>
			<GetHsmStatusRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
             <t:select path="//admin:GetHsmStatusResponse" />
        </t:response>
	</t:test>

	<t:test >
		<t:request depends="HsmRequest01" >
			<AbortHsmRequest  xmlns="urn:zimbraAdmin" action="cancel">
			</AbortHsmRequest>
		</t:request>
        <t:response>
			<t:select path="//admin:AbortHsmResponse" />
        </t:response>
	</t:test>
	
	
</t:test_case>

</t:tests>