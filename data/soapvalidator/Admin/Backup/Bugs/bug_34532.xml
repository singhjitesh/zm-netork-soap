<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="bug34532.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Bug_34532_AccountSetup" type="always" >
    <t:objective>Basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="create_test_account1" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>               
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Bug_34532_01" type="functional" areas="backup"  bugids="34532">
    <t:objective>Verify the mailbox Id of restored account that is deleted is same </t:objective>
    <t:steps>
		1. Fire GetMailboxRequest to set mbxid
		2. Backup the account
		3. Delete the account
		4. Restore the account
		5. Send GetAccountRequest to set new account id
		5. Send GetMailboxRequest to verify same mbxid
    </t:steps>
    
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAdmin" value="${account1.server}"/>

    <t:test >
        <t:request>
            <GetMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${account1.id}"/>
            </GetMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetMailboxResponse/admin:mbox" attr="mbxid"  set="account1.mbxid"/>
        </t:response>
    </t:test>  

    <t:test required="true">
         <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" sync="1">
                    <account name="${account1.name}"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAdmin" value="${account1.server}"/>

    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${account1.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>

<t:delay msec="1000"/>

    <t:test>
        <t:request>
            <RestoreRequest xmlns="urn:zimbraAdmin">
                <restore includeIncrementals="0" method="mb">
                    <account name="${account1.name}"/>                    
                </restore>
            </RestoreRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:RestoreResponse"/>
        </t:response>
    </t:test> 

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin" applyCos="1">
				<account by="name">${account1.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account" attr="id" set="account1.newId" />
		</t:response>
	</t:test>

	<t:property name="server.zimbraAdmin" value="${account1.server}"/>

    <t:test >
        <t:request>
            <GetMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${account1.newId}"/>
            </GetMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetMailboxResponse/admin:mbox" attr="mbxid"  match="${account1.mbxid}"/>
        </t:response>
    </t:test>  
		
</t:test_case> 


</t:tests>

