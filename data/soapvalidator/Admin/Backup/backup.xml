<t:tests xmlns:t="urn:zimbraTestHarness">

 <t:property name="folder.custom" value="/tmp/backup${TIME}.${COUNTER}"/>
<t:property name="folder.writable" value="/tmp/backup${TIME}.${COUNTER}"/>

<t:property name="backup.negative" value="-1"/>
<t:property name="backup.blank" value=""/>
<t:property name="backup.space" value="         "/>
<t:property name="backup.sometext" value="some text"/>
<t:property name="backup.sometext2" value="sometext"/>
<t:property name="backup.spchar" value="/*//'\\^"/>

<t:property name="test_account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account1.password" value="test123"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always" >
    <t:objective>Account setup</t:objective>
    <t:steps>1. Login to Admin.
             2. Create a test account
    </t:steps>

	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "mkdir -p ${folder.custom}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>
	
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "chmod 777  ${folder.custom}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>

	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "mkdir -p ${folder.writable}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>
	
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "chmod 777 ${folder.writable}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>


    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="create_test_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account1.password}</password>               
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="BackupRequest1" type="functional" areas="backup">
    <t:objective> Take a full backup in a default folder </t:objective>

    <t:test >
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" sync="1">
                    <account name="all"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse/admin:backup" attr="label" set="label.id1"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="BackupRequest2" type="functional" areas="backup">
    <t:objective> Take an incremental backup in a default folder</t:objective>
 
    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="incremental" sync="1">
                	<account name="all"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="BackupRequest3" type="functional" areas="backup" bugids="5573">
    <t:objective> Abort a backup </t:objective>
 
      <t:test id="backuprequest3">
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full">
                    <account name="all"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse/admin:backup" attr="label" set="label.id3"/>
        </t:response>
    </t:test>

     <t:test depends="backuprequest3">
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="abort" label="${label.id3}"/>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="BackupRequest4" type="functional" areas="backup" bugids="5573">
    <t:objective> Take a full backup in a custom folder </t:objective>

   <t:test id="backuprequest4" delay="${postfixdelay.msec}">
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" target="${folder.custom}" sync="1">
                    <account name="all"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse/admin:backup" attr="label" set="label.id4"/>
        </t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="BackupRequest5" type="deprecated" areas="backup">
    <t:objective> Take an incremental backup in a custom folder</t:objective>
 
    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="incremental" target="${folder.custom}" sync="1">
                    <account name="all"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="BackupRequest6" type="functional" areas="backup" bugids="5573">
    <t:objective> Abort a backup taken in a custom folder </t:objective>
 
    <t:test id="backuprequest6">
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" target="${folder.custom}">
                    <account name="all"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse/admin:backup" attr="label" set="label.id6"/>
        </t:response>
    </t:test>
    
     <t:test depends="backuprequest6">
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="abort" label="${label.id6}" target="${folder.custom}"/>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="BackupRequest7" type="functional" areas="backup" bugids="5573">
    <t:objective> Take a full backup in a default folder for a particular account </t:objective>

<t:property name="server.zimbraAdmin" value="${test_acct1.server}"/>

    <t:test id="backuprequest7" delay="${postfixdelay.msec}">
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" sync="1">
                    <account name="${test_account1.name}"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse/admin:backup" attr="label" set="label.id7"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="BackupRequest8" type="functional" areas="backup">
    <t:objective> Take an incremental backup in a default folder for a particular account </t:objective>
 
    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="incremental" sync="1">
                    <account name="${test_account1.name}"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="BackupRequest9" type="functional" areas="backup" bugids="5573">
    <t:objective> Abort a backup taken for particular account taken in default folder</t:objective>
 
       <t:test id="backuprequest9">
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full">
                    <account name="${test_account1.name}"/>
                 </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse/admin:backup" attr="label" set="label.id9"/>
        </t:response>
    </t:test>
     <t:test depends="backuprequest9">
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="abort" label="${label.id9}"/>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="BackupRequest10" type="functional" areas="backup">
    <t:objective> Take a full backup in a custom folder for a particular account </t:objective>

    <t:test id="backuprequest10" delay="${postfixdelay.msec}">
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" target="${folder.custom}" sync="1">
                    <account name="${test_account1.name}"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse/admin:backup" attr="label" set="label.id4"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="BackupRequest11" type="deprecated" areas="backup">
    <t:objective> Take an incremental backup in a custom folder for a particular account </t:objective>
 
    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="incremental" target="${folder.custom}" sync="1">
                     <account name="${test_account1.name}"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="BackupRequest12" type="functional" areas="backup">
    <t:objective> Abort a backup taken for particular account taken in custom folder </t:objective>
 
    <t:test id="backuprequest12">
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" target="${folder.custom}">
                     <account name="${test_account1.name}"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse/admin:backup" attr="label" set="label.id12"/>
        </t:response>
    </t:test>
     <t:test depends="backuprequest12">
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="abort" label="${label.id12}" target="${folder.custom}"/>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<!--
<t:test_case testcaseid="BackupRequest13" type="functional" areas="backup">
    <t:objective> Take a full backup in a default folder with includeMeta = valid values </t:objective>

    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" includeMeta="0" sync="1"/>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" includeMeta="1" sync="1"/>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="incremental" includeMeta="0" sync="1"/>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="incremental" includeMeta="1" sync="1"/>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="BackupRequest14" type="negative" areas="backup">
    <t:objective> Take a full backup in a default folder with includeMeta = Invalid values (negative/sometext/space/special characters)</t:objective>

    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" includeMeta="${backup.negative}" sync="1"/>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="incremental" includeMeta="${backup.sometext}" sync="1"/>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" includeMeta="${backup.space}" sync="1"/>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" includeMeta="${backup.spchar}" sync="1"/>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

</t:test_case>
-->

<t:test_case testcaseid="BackupRequest15" type="negative" areas="backup">
    <t:objective> BackupRequest with invalid values for method i.e. method = invalid values (leading spaces/trailing space/sometext/special characters)</t:objective>

    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="${backup.space}full" sync="1">
					<account name="all"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full${backup.space}" sync="1">
					<account name="all"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="BackupRequest16" type="negative" areas="backup" bugids="2217">
    <t:objective> Take a backup in invalid folder i.e target = invalid values (sometext, special characters) </t:objective>

    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" target="${folder.writable}/${backup.sometext}" sync="1">
					<account name="all"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" target="${folder.writable}/${backup.sometext2}" sync="1">
                    <account name="all"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^backup.INVALID_BACKUP_TARGET$"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" target="${folder.writable}/${backup.spchar}"  sync="1">
					<account name="all"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^backup.INVALID_BACKUP_TARGET$"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" target="${backup.space}"  sync="1">
					<account name="all"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="BackupRequest17" type="negative" areas="backup" bugids="3765">
    <t:objective> BackupRequest with invalid value in account attribute i.e. accounts = invalid value (space\sometext\special characters) </t:objective>

    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" target="${folder.custom}" sync="1">
					<account name="${backup.space}"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" target="${folder.custom}" sync="1">
					<account name="${backup.sometext}"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" target="${folder.custom}" sync="1">
					<account name="${backup.spchar}"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="BackupRequest18" type="negative" areas="backup" bugids="3765">
    <t:objective> Backup of a deleted account i.e. accounts = name of deleted account </t:objective>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
    <t:test id="backuprequest18a">
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${test_account1.id}</id>
            </DeleteAccountRequest>
    </t:request>
        <t:response>
            <t:select path="//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:test depends="backuprequest18a">
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" target="${folder.custom}" sync="1">
					<account name="${test_account1.name}"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
		    <!-- Poonam 16/may/2008: expect error message instead of backupresponse-->
            <t:select path="//zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>    

</t:test_case>

</t:tests>


