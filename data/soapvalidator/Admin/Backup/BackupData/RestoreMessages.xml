<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.message1.subject" value="mail.${TIME}.${COUNTER}"/>
<t:property name="account1.message1.content" value="content.${TIME}.${COUNTER}"/>

<t:property name="account2.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.message1.subject" value="mail.${TIME}.${COUNTER}"/>
<t:property name="account2.message1.content" value="content.${TIME}.${COUNTER}"/>

<t:property name="account3.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.message1.subject" value="mail.${TIME}.${COUNTER}"/>
<t:property name="account3.message1.content" value="content.${TIME}.${COUNTER}"/>

<t:property name="account4.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.message1.subject" value="mail.${TIME}.${COUNTER}"/>
<t:property name="account4.message1.content" value="content.${TIME}.${COUNTER}"/>




<t:property name="destination.name" value="destination.${TIME}.${COUNTER}@${defaultdomain.name}"/>
    

<t:property name="op.grant"			value="grant"/>

<t:property name="grant.usr"			value="usr"/>
<t:property name="grant.grp"			value="grp"/>
<t:property name="grant.dom"			value="dom"/>
<t:property name="grant.cos"			value="cos"/>
<t:property name="grant.all"			value="all"/>
<t:property name="grant.pub"			value="pub"/>
<t:property name="grant.guest"			value="guest"/>

<t:property name="rights.none"			value=""/>
<t:property name="rights.read"			value="r"/>
<t:property name="rights.write"			value="w"/>
<t:property name="rights.insert"		value="i"/>
<t:property name="rights.delete"		value="d"/>
<t:property name="rights.administer"	value="a"/>
<t:property name="rights.workflow"		value="x"/>
<t:property name="rights.manager"		value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}"/>
<t:property name="view.conversation"	value="conversation"/>
<t:property name="view.message"			value="message"/>
<t:property name="view.contact"			value="contact"/>
<t:property name="view.appointment"		value="appointment"/>
<t:property name="view.note"			value="note"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>  


    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${destination.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="destination.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="destination.server"/>
        </t:response>
    </t:test>  


</t:test_case>


<t:test_case testcaseid="RestoreItems_Message_01" type="smoke" areas="backup,nonappliance">
    <t:objective>Backup (full) and restore an account with received items.  Verify the message data is still viewable after restore</t:objective>
    <t:steps>
    1. Login as destination account, send a mail to account1
    2. Backup the account1
    3. Delete the account1
    4. Restore the account1
    5. Verify that account1 still has the received mail
    </t:steps>



	<t:property name="server.zimbraAccount" value="${destination.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${destination.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test required="true">
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a='${account1.name}'/>
					<su>${account1.message1.subject}</su>
					<mp ct="text/plain">
						<content>${account1.message1.content}</content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse/mail:m"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test required="true">
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${account1.message1.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="account1.message1.id"/>
		</t:response>
	</t:test>

    <t:test required="true">
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.message1.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account1.message1.id}"/>
        </t:response>
    </t:test>

	<t:property name="account.name" value="${account1.name}"/>
	<t:property name="account.id" value="${account1.id}"/>
    <t:include filename="BackupWorkflowFullDeleteRestore.inc"/>
	<t:property name="server.zimbraAccount" value="${zimbraServer.name}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
    
    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.message1.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account1.message1.id}"/>
        </t:response>
    </t:test>



</t:test_case>




<t:test_case testcaseid="RestoreItems_Message_02" type="smoke" areas="backup,nonappliance" >
    <t:objective>Backup (incremental) and restore an account with received items.  Verify the message data is still viewable after restore</t:objective>
    <t:steps>
    1. Login as account2 to create the mailbox
    2. Backup account2
    3. account2 sends a mail
    4. Do incremental backup of account2
    5. Delete the account2
    6. Restore the account2 (no redo logs)
    7. Verify that account2 can still view sent messages 
    </t:steps>


	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<!-- Workaround for bug 8902 - account needs to login first -->
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>



	<t:property name="account.name" value="${account2.name}"/>
	<t:property name="account.id" value="${account2.id}"/>
    <t:include filename="BackupRequestFullBasic.inc"/>
	<t:property name="backup2.label1.id" value="${backup.label}"/>
	<t:property name="server.zimbraAccount" value="${destination.server}"/>
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${destination.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test >
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a='${account2.name}'/>
					<su>${account2.message1.subject}</su>
					<mp ct="text/plain">
						<content>${account2.message1.content}</content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse/mail:m"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${account2.message1.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="account2.message1.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account2.message1.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account2.message1.id}"/>
        </t:response>
    </t:test>

	<t:property name="account.name" value="${account2.name}"/>
	<t:property name="account.id" value="${account2.id}"/>
    <t:include filename="BackupWorkflowIncrementalDeleteRestore.inc"/>
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account2.message1.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account2.message1.id}"/>
        </t:response>
    </t:test>


</t:test_case>



<t:test_case testcaseid="RestoreItems_Message_03" type="smoke" areas="backup,nonappliance">
    <t:objective>Backup (full) and restore an account with sent items.  Verify the sent data is still viewable after restore</t:objective>
    <t:steps>
    1. Login as account3, send a mail
    2. Backup the account3
    3. Delete the account3
    4. Restore the account3
    5. Verify that account3 still has the sent mail
    </t:steps>



	<t:property name="server.zimbraAccount" value="${account3.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test >
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a='${destination.name}'/>
					<su>${account3.message1.subject}</su>
					<mp ct="text/plain">
						<content>${account3.message1.content}</content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="account3.message1.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account3.message1.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account3.message1.id}"/>
        </t:response>
    </t:test>

	<t:property name="account.name" value="${account3.name}"/>
	<t:property name="account.id" value="${account3.id}"/>
    <t:include filename="BackupWorkflowFullDeleteRestore.inc"/>
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
    
    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account3.message1.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account3.message1.id}"/>
        </t:response>
    </t:test>



</t:test_case>




<t:test_case testcaseid="RestoreItems_Message_04" type="smoke" areas="backup,nonappliance" bugids="9357">
    <t:objective>Backup (incremental) and restore an account with sent items.  Verify the sent data is still viewable after restore</t:objective>
    <t:steps>
    1. Login as account4 to create the mailbox
    2. Backup account4
    3. account4 sends a mail
    4. Do incremental backup of account4
    5. Delete the account4
    6. Restore the account4 (no redo logs)
    7. Verify that account4 can still view sent messages 
    </t:steps>


	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account4.server}"/>

	<!-- Workaround for bug 8902 - account needs to login first -->
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:property name="account.name" value="${account4.name}"/>
	<t:property name="account.id" value="${account4.id}"/>
    <t:include filename="BackupRequestFullBasic.inc"/>
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>



	<t:test >
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a='${destination.name}'/>
					<su>${account4.message1.subject}</su>
					<mp ct="text/plain">
						<content>${account4.message1.content}</content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="account4.message1.id"/>
		</t:response>
	</t:test>


    
    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account4.message1.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account4.message1.id}"/>
        </t:response>
    </t:test>



	<t:property name="account.name" value="${account4.name}"/>
	<t:property name="account.id" value="${account4.id}"/>
    <t:include filename="BackupWorkflowIncrementalDeleteRestore.inc"/>
    <t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account4.message1.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account4.message1.id}"/>
        </t:response>
    </t:test>


</t:test_case>



</t:tests>

