<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="passwd.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.password" value="${defaultpassword.value}"/>
<t:property name="account1.new_password" value="new${defaultpassword.value}"/>
    
<t:property name="account2.name" value="passwd.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.password" value="${defaultpassword.value}"/>
<t:property name="account2.new_password" value="new${defaultpassword.value}"/>
    


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="BackupData_RestorePassword_01" type="smoke" areas="backup,nonappliance" bugids="8901">
    <t:objective>Verify that account attributes are backed up (full) and restored, even without the account loging in and creating a mailbox (bug 8901)</t:objective>
    <t:steps>
    1. Create an account
    2. Change the account password
    2. Backup the account
    3. Delete the account
    4. Restore the account
    5. Auth using the new password
    </t:steps>

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${account1.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
           <SetPasswordRequest xmlns="urn:zimbraAdmin">
                <id>${account1.id}</id>
                <newPassword>${account1.new_password}</newPassword>
           </SetPasswordRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:SetPasswordResponse"/>
        </t:response>
    </t:test>

	<!--<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>-->
	<t:property name="account.name" value="${account1.name}"/>
	<t:property name="account.id" value="${account1.id}"/>
	<t:property name="server.zimbraAdmin" value="${account1.server}"/>
    <t:include filename="BackupWorkflowFullDeleteRestore.inc"/>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account1.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account1.new_password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>


</t:test_case>


<t:test_case testcaseid="BackupData_RestorePassword_02" type="smoke" areas="backup,nonappliance" bugids="8901">
    <t:objective>Verify that account attributes are backed up (full) and restored, even without the account loging in and creating a mailbox (bug 8901)</t:objective>
    <t:steps>
    1. Create an account
    2. Backup the account
    3. Change the account password
    4. Do incremental backup
    5. Delete the account
    6. Restore the account (no redo logs)
    7. Verify the new password is still set by authenticating
    </t:steps>

	
    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${account2.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  

	<t:property name="account.name" value="${account2.name}"/>
	<t:property name="account.id" value="${account2.id}"/>
	<t:property name="server.zimbraAdmin" value="${account2.server}"/>
    <t:include filename="BackupRequestFullBasic.inc"/>
	<t:property name="backup2.label1.id" value="${backup.label}"/>
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>


    <t:test >
        <t:request>
           <SetPasswordRequest xmlns="urn:zimbraAdmin">
                <id>${account2.id}</id>
                <newPassword>${account2.new_password}</newPassword>
           </SetPasswordRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:SetPasswordResponse"/>
        </t:response>
    </t:test>


	<t:property name="account.name" value="${account2.name}"/>
	<t:property name="account.id" value="${account2.id}"/>
	<t:property name="server.zimbraAdmin" value="${account2.server}"/>
    <t:include filename="BackupWorkflowIncrementalDeleteRestore.inc"/>


	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:delay msec="60000"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${account2.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${account2.new_password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>


</t:test_case>



</t:tests>

