<t:tests xmlns:t="urn:zimbraTestHarness">
	<t:property name="account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
	<t:property name="account2.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
	<t:property name="cos1.name" value="cos${TIME}${COUNTER}"/>
	<t:property name="cos2.name" value="cos${TIME}${COUNTER}"/>
	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
	<t:test_case testcaseid="Ping" type="always" >
	    <t:objective>basic system check</t:objective>
	    <t:test required="true">
	        <t:request>
	            <PingRequest xmlns="urn:zimbraAdmin"/>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:PingResponse"/>
	        </t:response>
	    </t:test>
	</t:test_case>

	<t:test_case testcaseid="Smime_enable_disable01" type="smoke" bugids="57183" areas="network">
		<t:objective>Verify zimbraFeatureSMIMEEnabled attribute gets inherited to account from COS</t:objective>
		<t:steps>
			1. Create Cos1 set zimbraFeatureSMIMEEnabled TRUE
			2. Create account using above COS1
			3. Verify account has zimbraFeatureSMIMEEnabled TRUE
			4. Verify GetInfoRequest has attr name="smime" TRUE
			5. modify COS1 set zimbraFeatureSMIMEEnabled FALSE
			6. Verify account has zimbraFeatureSMIMEEnabled FALSE
			7. Verify GetInfoRequest has attr name="smime" FALSE
		</t:steps>

	    <t:test required="true" >
	        <t:request>
	            <AuthRequest xmlns="urn:zimbraAdmin">
	                <name>${admin.user}</name>
	                <password>${admin.password}</password>
	            </AuthRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
	        </t:response>
	    </t:test>

	    <t:test>
	        <t:request>
	            <CreateCosRequest xmlns="urn:zimbraAdmin">
	                <name xmlns="">${cos1.name}</name>        
	                <a n="zimbraFeatureSMIMEEnabled">TRUE</a>
	            </CreateCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos1.id"/>         
	        </t:response>
	    </t:test>

    <t:test >
        <t:request>
	        <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
                <a n="zimbraCOSId">${cos1.id}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraFeatureSMIMEEnabled"]' set="TRUE"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>		

	<t:test>
		<t:request>
			<GetInfoRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetInfoResponse/acct:license/acct:attr[translate(@name, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz')='smime']" match="TRUE" /> 
		</t:response>
	</t:test>
	
	<t:test required="true" >
      <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
	
	<t:test id="modifycosrequest" >
        <t:request>
            <ModifyCosRequest xmlns="urn:zimbraAdmin">
                <id>${cos1.id}</id>
                <a n="zimbraFeatureSMIMEEnabled">FALSE</a>
             </ModifyCosRequest>
         </t:request>
         <t:response>
	        <t:select path="//admin:ModifyCosResponse"/>         
	      </t:response>
       </t:test>         
	
		<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
	    <t:test required="true">
	        <t:request>
	            <AuthRequest xmlns="urn:zimbraAccount">
	                <account by="name">${account1.name}</account>
	                <password>${defaultpassword.value}</password>
	            </AuthRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
	        </t:response>
	    </t:test>		
	
		<t:test>
			<t:request>
				<GetInfoRequest xmlns="urn:zimbraAccount"/>
			</t:request>
			<t:response>
					<t:select path="//acct:GetInfoResponse/acct:license/acct:attr[translate(@name, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz')='smime']" match="FALSE" /> 
			</t:response>
		</t:test>

</t:test_case>
		
	<t:test_case testcaseid="Smime_enable_disable02" type="smoke" bugids="57183" areas="network">
		<t:objective>Verify zimbraFeatureSMIMEEnabled attribute override the COS attribute</t:objective>
		<t:steps>
			1. Create Cos2 set zimbraFeatureSMIMEEnabled FALSE
			2. Create account using above COS2 set zimbraFeatureSMIMEEnabled TRUE
			3. Verify account has zimbraFeatureSMIMEEnabled TRUE
			4. Verify GetInfoRequest has  name="smime" TRUE
			5. modify account set zimbraFeatureSMIMEEnabled FALSE
			6. Verify account has zimbraFeatureSMIMEEnabled FALSE
			7.  Verify GetInfoRequest has  name="smime" FALSE
		</t:steps>
		
		    <t:test required="true" >
	        <t:request>
	            <AuthRequest xmlns="urn:zimbraAdmin">
	                <name>${admin.user}</name>
	                <password>${admin.password}</password>
	            </AuthRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
	        </t:response>
	    </t:test>

	    <t:test>
	        <t:request>
	            <CreateCosRequest xmlns="urn:zimbraAdmin">
	                <name xmlns="">${cos2.name}</name>        
	                <a n="zimbraFeatureSMIMEEnabled">FALSE</a>
	            </CreateCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos2.id"/>         
	        </t:response>
	    </t:test>

    <t:test >
        <t:request>
	        <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
                <a n="zimbraCOSId">${cos2.id}</a>
                <a n="zimbraFeatureSMIMEEnabled">TRUE</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraFeatureSMIMEEnabled"]' set="TRUE"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>		

	<t:test>
		<t:request>
			<GetInfoRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetInfoResponse/acct:license/acct:attr[translate(@name, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz')='smime']" match="TRUE" /> 
		</t:response>
	</t:test>
	
	<t:test required="true" >
      <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                <id>${account2.id}</id>
                <a n="zimbraFeatureSMIMEEnabled">FALSE</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
   <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>		

	<t:test>
		<t:request>
			<GetInfoRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetInfoResponse/acct:license/acct:attr[translate(@name, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz')='smime']" match="FALSE" /> 
		</t:response>
	</t:test>
	</t:test_case>
	
</t:tests>
