<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="ldap.zimbraAuthLdapURL" value="ldap://${LDAP.url}:${LDAP.port}/"/>
<t:property name="ldap.admin.name" value="${LDAP.bindDN}"/>
<t:property name="ldap.admin.password" value="${LDAP.bindPassword}"/>

<t:property name="ldap.zimbraAuthMech" value="ldap"/>
<t:property name="ad.zimbraAuthMech" value="ad"/>

<t:property name="ldap.user.invalid" value="InvalidUser"/>
<t:property name="ldap.password.invalid" value="InvalidPassoword"/>

<t:property name="ldap.bindDNInvalid" value="cn=admin,dc=zimbraqa,dc=com"/>

<t:property name="ldap.zimbraAuthLdapURL.invalid1" value="http://${LDAP.url}:${LDAP.port}/"/> <!-- Wrong protocol -->
<t:property name="ldap.zimbraAuthLdapURL.invalid2" value="ldap://100.100.100.100:${LDAP.port}/"/> <!-- Wrong url -->
<t:property name="ldap.zimbraAuthLdapURL.invalid3" value="ldap://${LDAP.url}:80/"/> <!-- Wrong port -->

<t:property name="check.blank" value=""/>
<t:property name="check.space" value="      "/>
<t:property name="check.sometext" value="some text"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always" >
    <t:objective>Login to the account </t:objective>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="LDAP_CheckAuthConfigRequest1" type="smoke" >
    <t:objective> CheckAuthConfigRequest for LDAP server with valid parameters </t:objective>

    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//admin:CheckAuthConfigResponse/admin:code" match="^check.OK$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="LDAP_CheckAuthConfigRequest2" type="smoke" >
    <t:objective> CheckAuthConfigRequest for LDAP server with valid username and valid password in upper case</t:objective>

    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPasswordChangeCase}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//admin:CheckAuthConfigResponse/admin:code" match="^check.AUTH_FAILED$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="LDAP_CheckAuthConfigRequest3" type="smoke" >
    <t:objective> CheckAuthConfigRequest for LDAP server with valid username and Invalid password </t:objective>

    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
				<password>${ldap.password.invalid}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//admin:CheckAuthConfigResponse/admin:code" match="^check.AUTH_FAILED$"/>
        </t:response>
    </t:test>


</t:test_case>


<t:test_case testcaseid="LDAP_CheckAuthConfigRequest4" type="functional" >
    <t:objective> CheckAuthConfigRequest for LDAP server with Invalid username and valid password </t:objective>

    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${ldap.user.invalid}</name>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//admin:CheckAuthConfigResponse/admin:code" match="^check.AUTH_FAILED$"/>
        </t:response>
    </t:test>


</t:test_case>


<t:test_case testcaseid="LDAP_CheckAuthConfigRequest5" type="functional" >
    <t:objective> CheckAuthConfigRequest for LDAP server with blank username or password </t:objective>

    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${check.blank}</name>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//admin:CheckAuthConfigResponse/admin:code" match="^check.AUTH_FAILED$"/>
        </t:response>
    </t:test>
    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
				<password>${check.blank}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//admin:CheckAuthConfigResponse/admin:code" match="^check.AUTH_FAILED$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="LDAP_CheckAuthConfigRequest6" type="negative">
    <t:objective> CheckAuthConfigRequest for AD server with Invalid value for zimbraAuthLdapBindDn</t:objective>

    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${ldap.bindDNInvalid}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//admin:CheckAuthConfigResponse/admin:code" match="^check.AUTH_FAILED$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="LDAP_CheckAuthConfigRequest7" type="negative" >
    <t:objective> CheckAuthConfigRequest for AD server with wrong protocol at zimbraAuthLdapURL </t:objective>

    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL.invalid1}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//admin:CheckAuthConfigResponse/admin:code" match="^check.FAILURE$"/>
        </t:response>
    </t:test>


</t:test_case>


<t:test_case testcaseid="LDAP_CheckAuthConfigRequest8" type="negative" >
    <t:objective> CheckAuthConfigRequest for LDAP server with wrong URL at zimbraAuthLdapURL </t:objective>

    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL.invalid2}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//admin:CheckAuthConfigResponse/admin:code" match="^check.FAILURE$|check.COMMUNICATION_FAILURE$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="LDAP_CheckAuthConfigRequest9" type="negative" >
    <t:objective> CheckAuthConfigRequest for LDAP server with wrong port at zimbraAuthLdapURL </t:objective>

    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL.invalid3}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//admin:CheckAuthConfigResponse/admin:code" match="^check.CONNECTION_REFUSED$|^check.COMMUNICATION_FAILURE$|^check.FAILURE$"/>
        </t:response>
    </t:test>

</t:test_case>

<!-- the zimbraAuthMech attribute is only used by the GUI -->
<t:test_case testcaseid="LDAP_CheckAuthConfigRequest10" type="deprecated">
    <t:objective> CheckAuthConfigRequest for AD server with zimbraAuthMech = ldap(other valid value except ad)</t:objective>

    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ad.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//admin:CheckAuthConfigResponse/admin:code" match="^check.AUTH_FAILED$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="LDAP_CheckAuthConfigRequest11" type="negative" >
    <t:objective> CheckAuthConfigRequest for AD server with zimbraAuthMech = Invalid value (Some text)/blank </t:objective>

    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${check.sometext}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${check.blank}</a>
                 <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="LDAP_CheckAuthConfigRequest12" type="negative" >
    <t:objective> CheckAuthConfigRequest with missing mandatory element</t:objective>

    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>
    
    <!--
    	The name is used instead of the bind DN, which leads to this test passing
    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>
	-->
    
    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>
    
    
    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
				<password>${LDAP.account01.password}</password>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CheckAuthConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
                <name>${LDAP.account01.user}</name>
            </CheckAuthConfigRequest>
        </t:request>            
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>
    
</t:test_case>


</t:tests>

