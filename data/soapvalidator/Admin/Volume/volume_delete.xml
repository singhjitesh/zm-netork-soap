<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="volume_spchar" value="!@^*()_+"/>
<t:property name="volume_alpha" value="abcd"/>
<t:property name="volume_number" value="1234${TIME}${COUNTER}"/>
<t:property name="volume_negative" value="-2"/>
<t:property name="volume_zero" value="0"/>
<t:property name="volume_blank" value=""/>

<t:property name="bits_starting-with-zero" value="0012"/>
<t:property name="mgbits_default" value="8"/>
<t:property name="mbits_default" value="12"/>
<t:property name="fgbits_default" value="8"/>
<t:property name="fbits_default" value="12"/>
<t:property name="compressBlobs_default" value="0"/>
<t:property name="compressionThreshold_default" value="4096"/>
<t:property name="type" value="1"/>

<t:property name="name" value="Volume${COUNTER}"/>

<t:property name="tempdir" value="/tmp/volumes"/>
<t:staftask >
	<t:request>
		<server>${zimbraServer.name}</server>
		<service>PROCESS</service>
		<params>START SHELL COMMAND "mkdir -p ${tempdir}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
	</t:request>
</t:staftask>
<t:staftask >
	<t:request>
		<server>${zimbraServer.name}</server>
		<service>PROCESS</service>
		<params>START SHELL COMMAND "chmod 777 ${tempdir}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
	</t:request>
</t:staftask>
<t:property name="basedir" value="${tempdir}/volumeRoot${COUNTER}${TIME}"/>
<t:staftask >
	<t:request>
		<server>${zimbraServer.name}</server>
		<service>PROCESS</service>
		<params>START SHELL COMMAND "mkdir -p ${basedir}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
	</t:request>
</t:staftask>
<t:staftask >
	<t:request>
		<server>${zimbraServer.name}</server>
		<service>PROCESS</service>
		<params>START SHELL COMMAND "chmod 777 ${basedir}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
	</t:request>
</t:staftask>


<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>

    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct_setup_deletevolume" type="always">
    <t:objective>Create test account and modify settings.</t:objective>
 
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="DeleteVolumeRequest01" type="smoke">
    <t:objective> Delete a volume  </t:objective>
    <t:steps> 1. Create a volume
              2. Delete it
    </t:steps>  
     
	<t:property name="rootpath" value="${basedir}/rootpath${COUNTER}${TIME}"/>
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "mkdir -p ${rootpath}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "chmod 777 ${rootpath}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>
	<t:property name="name" value="Volume${COUNTER}${TIME}"/>

    <t:test id="deletevolumerequest01a">
        <t:request>
            <CreateVolumeRequest xmlns="urn:zimbraAdmin">
                <volume type= "${type}" name= "${name}" rootpath= "${rootpath}" mgbits= "${mgbits_default}" mbits= "${mbits_default}" fgbits= "${fgbits_default}" fbits="${fbits_default}" compressBlobs="${compressBlobs_default}" compressionThreshold="${compressionThreshold_default}"/>
            </CreateVolumeRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateVolumeResponse/admin:volume" attr="id" set="volume.id1"/>
        </t:response>
    </t:test>

    <t:test id="deletevolumerequest01b" depends="deletevolumerequest01a">
        <t:request>
            <DeleteVolumeRequest  xmlns="urn:zimbraAdmin" id="${volume.id1}"/>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteVolumeResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="DeleteVolumeRequest02" type="negative">
    <t:objective> Delete a volume without specifying id attribute </t:objective>

    <t:test>
        <t:request>
            <DeleteVolumeRequest  xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="DeleteVolumeRequest03" type="negative">
    <t:objective> Delete a already deleted volume </t:objective>
     
    <t:test depends="deletevolumerequest01b">
        <t:request>
            <DeleteVolumeRequest  xmlns="urn:zimbraAdmin" id="${volume.id1}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="volume.NO_SUCH_VOLUME"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="DeleteVolumeRequest04" type="negative">
    <t:objective> Delete a volume with invalid id (spchar/alpha/zero/negative/blank) </t:objective>
     
    <t:test>
        <t:request>
            <DeleteVolumeRequest  xmlns="urn:zimbraAdmin" id="${volume_spchar}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <DeleteVolumeRequest  xmlns="urn:zimbraAdmin" id="${volume_alpha}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <DeleteVolumeRequest  xmlns="urn:zimbraAdmin" id="${volume_zero}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="volume.INVALID_REQUEST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <DeleteVolumeRequest  xmlns="urn:zimbraAdmin" id="${volume_negative}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="volume.INVALID_REQUEST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <DeleteVolumeRequest  xmlns="urn:zimbraAdmin" id="${volume_blank}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

</t:test_case>


<!-- deleteFiles has been removed from DeleteVolumeRequest -->
<t:test_case testcaseid="DeleteVolumeRequest05" type="deprecated">
    <t:objective> Delete a volume with deleteFiles as 0 </t:objective>
    <t:steps> 1. Create a volume
              2. Delete it
    </t:steps>  

	<t:property name="rootpath" value="${basedir}/rootpath${COUNTER}${TIME}"/>
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "mkdir -p ${rootpath}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "chmod 777 ${rootpath}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>
	<t:property name="name" value="Volume${COUNTER}${TIME}"/>

    <t:test>
        <t:request>
            <CreateVolumeRequest xmlns="urn:zimbraAdmin">
                <volume type= "${type}" name= "${name}" rootpath= "${rootpath}" mgbits= "${mgbits_default}" mbits= "${mbits_default}" fgbits= "${fgbits_default}" fbits="${fbits_default}" compressBlobs="${compressBlobs_default}" compressionThreshold="${compressionThreshold_default}"/>
            </CreateVolumeRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateVolumeResponse/admin:volume" attr="id" set="volume.id2"/>
        </t:response>
    </t:test>
     
    <t:test>
        <t:request>
            <DeleteVolumeRequest  xmlns="urn:zimbraAdmin" id="${volume.id2}" deleteFiles="0"/>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteVolumeResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<!-- deleteFiles has been removed from DeleteVolumeRequest -->
<t:test_case testcaseid="DeleteVolumeRequest06" type="deprecated" bugids="4438">
    <t:objective> Delete a volume with deleteFiles as 1 </t:objective>
    <t:steps> 1. Create a volume
              2. Delete it
    </t:steps>  

	<t:property name="rootpath" value="${basedir}/rootpath${COUNTER}${TIME}"/>
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "mkdir -p ${rootpath}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "chmod 777 ${rootpath}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>
	<t:property name="name" value="Volume${COUNTER}${TIME}"/>

    <t:test id="deletevolumerequest06a">
        <t:request>
            <CreateVolumeRequest xmlns="urn:zimbraAdmin">
                <volume type= "${type}" name= "${name}" rootpath= "${rootpath}" mgbits= "${mgbits_default}" mbits= "${mbits_default}" fgbits= "${fgbits_default}" fbits="${fbits_default}" compressBlobs="${compressBlobs_default}" compressionThreshold="${compressionThreshold_default}"/>
            </CreateVolumeRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateVolumeResponse/admin:volume" attr="id" set="volume.id3"/>
        </t:response>
    </t:test>
     
    <t:test depends="deletevolumerequest06a">
        <t:request>
            <DeleteVolumeRequest  xmlns="urn:zimbraAdmin" id="${volume.id3}" deleteFiles="1"/>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteVolumeResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<!-- deleteFiles has been removed from the attributes for DeleteVolumeRequest -->
<t:test_case testcaseid="DeleteVolumeRequest07" type="deprecated">
    <t:objective> Delete a volume with deleteFiles as invalid (spchar/alpha/number/negative) </t:objective>

	<t:property name="rootpath" value="${basedir}/rootpath${COUNTER}${TIME}"/>
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "mkdir -p ${rootpath}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "chmod 777 ${rootpath}" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>
	<t:property name="name" value="Volume${COUNTER}${TIME}"/>

    <t:test>
        <t:request>
            <CreateVolumeRequest xmlns="urn:zimbraAdmin">
                <volume type= "${type}" name= "${name}" rootpath= "${rootpath}" mgbits= "${mgbits_default}" mbits= "${mbits_default}" fgbits= "${fgbits_default}" fbits="${fbits_default}" compressBlobs="${compressBlobs_default}" compressionThreshold="${compressionThreshold_default}"/>
            </CreateVolumeRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateVolumeResponse/admin:volume" attr="id" set="volume.id4"/>
        </t:response>
    </t:test>
     
    <t:test>
        <t:request>
            <DeleteVolumeRequest  xmlns="urn:zimbraAdmin" id="${volume.id4}" deleteFiles="${volume_spchar}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <DeleteVolumeRequest  xmlns="urn:zimbraAdmin" id="${volume.id4}" deleteFiles="${volume_alpha}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <DeleteVolumeRequest  xmlns="urn:zimbraAdmin" id="${volume.id4}" deleteFiles="${volume_number}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <DeleteVolumeRequest  xmlns="urn:zimbraAdmin" id="${volume.id4}" deleteFiles="${volume_negative}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <DeleteVolumeRequest  xmlns="urn:zimbraAdmin" id="${volume.id4}" deleteFiles="${volume_blank}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

</t:test_case>


</t:tests>


