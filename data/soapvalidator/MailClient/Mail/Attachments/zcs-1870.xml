<t:tests xmlns:t="urn:zimbraTestHarness">
    <!-- Test accounts declaration -->
    <t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account4.name" value="test4.${TIME}.${COUNTER}@${defaultdomain.name}" />

    <!-- Variables declaration -->
    <t:property name="folder_inbox" value="Inbox" />
    <t:property name="plain_sjis_long.msg"  value="${testMailRaw.root}/zcs-1870/plain_sjis_long.msg" />

    <t:property name="mail_subject1" value="text_plain_short" />
    <t:property name="mail_subject2" value="text_plain_long" />
    <t:property name="mail_subject3" value="text_html_long" />
    <t:property name="mail_subject4" value="text_plain_long_redirect" />
    <t:property name="plain_short_content" value="こんにちは" />
    <t:property name="plain_long_content" value="吾輩わがはいは猫である。名前はまだ無い。どこで生れたかとんと見当けんとうがつかぬ。何でも薄暗いじめじめした所でニャーニャー泣いていた事だけは記憶している。吾輩はここで始めて人間というものを見た。しかもあとで聞くとそれは書生という人間中で一番獰悪どうあくな種族であったそうだ。この書生というのは時々我々を捕つかまえて煮にて食うという話である。しかしその当時は何という考もなかったから別段恐しいとも思わなかった。ただ彼の掌てのひらに載せられてスーと持ち上げられた時何だかフワフワした感じがあったばかりである。掌の上で少し落ちついて書生の顔を見たのがいわゆる人間というものの見始みはじめであろう。この時妙なものだと思った感じが今でも残っている。第一毛をもって装飾されべきはずの顔がつるつるしてまるで薬缶やかんだ。その後ご猫にもだいぶ逢あったがこんな片輪かたわには一度も出会でくわした事がない。のみならず顔の真中があまりに突起している。そうしてその穴の中から時々ぷうぷうと煙けむりを吹く。どうも咽むせぽくて実に弱った。これが人間の飲む煙草たばこというものである事はようやくこの頃知った。この書生の掌の裏うちでしばらくはよい心持に坐っておったが、しばらくすると非常な速力で運転し始めた。書生が動くのか自分だけが動くのか分らないが無暗むやみに眼が廻る。胸が悪くなる。到底とうてい助からないと思っていると、どさりと音がして眼から火が出た。それまでは記憶しているがあとは何の事やらいくら考え出そうとしても分らない。ふと気が付いて見ると書生はいない。たくさんおった兄弟が一疋ぴきも見えぬ。肝心かんじんの母親さえ姿を隠してしまった。その上今いままでの所とは違って無暗むやみに明るい。眼を明いていられぬくらいだ。はてな何でも容子ようすがおかしいと、のそのそ這はい出して見ると非常に痛い。吾輩は藁わらの上から急に笹原の中へ棄てられたのである。" />
    <t:property name="html_long_content"  value="&lt;html&gt;&lt;body&gt;&lt;div style=&quot;font-family: arial, helvetica, sans-serif; font-size: 22pt; color: #000000&quot;&gt;&lt;div&gt;吾輩わがはいは猫である。名前はまだ無い。どこで生れたかとんと見当けんとうがつかぬ。何でも薄暗いじめじめした所でニャーニャー泣いていた事だけは記憶している。吾輩はここで始めて人間というものを見た。しかもあとで聞くとそれは書生という人間中で一番獰悪どうあくな種族であったそうだ。この書生というのは時々我々を捕つかまえて煮にて食うという話である。しかしその当時は何という考もなかったから別段恐しいとも思わなかった。ただ彼の掌てのひらに載せられてスーと持ち上げられた時何だかフワフワした感じがあったばかりである。掌の上で少し落ちついて書生の顔を見たのがいわゆる人間というものの見始みはじめであろう。この時妙なものだと思った感じが今でも残っている。第一毛をもって装飾されべきはずの顔がつるつるしてまるで薬缶やかんだ。その後ご猫にもだいぶ逢あったがこんな片輪かたわには一度も出会でくわした事がない。のみならず顔の真中があまりに突起している。そうしてその穴の中から時々ぷうぷうと煙けむりを吹く。どうも咽むせぽくて実に弱った。これが人間の飲む煙草たばこというものである事はようやくこの頃知った。この書生の掌の裏うちでしばらくはよい心持に坐っておったが、しばらくすると非常な速力で運転し始めた。書生が動くのか自分だけが動くのか分らないが無暗むやみに眼が廻る。胸が悪くなる。到底とうてい助からないと思っていると、どさりと音がして眼から火が出た。それまでは記憶しているがあとは何の事やらいくら考え出そうとしても分らない。ふと気が付いて見ると書生はいない。たくさんおった兄弟が一疋ぴきも見えぬ。肝心かんじんの母親さえ姿を隠してしまった。その上今いままでの所とは違って無暗むやみに明るい。眼を明いていられぬくらいだ。はてな何でも容子ようすがおかしいと、のそのそ這はい出して見ると非常に痛い。吾輩は藁わらの上から急に笹原の中へ棄てられたのである。&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" />
    
	<t:property name="sieve_test_redirect"
		value='require ["redirect"];
			if header :comparator "i;ascii-casemap" :matches "Subject" "*"
			{
				redirect "${test_account4.name}";
			}   
	' />

    <t:test_case testcaseid="Ping" type="always">
        <t:objective>basic system check</t:objective>
        <t:test required="true">
            <t:request>
                <PingRequest xmlns="urn:zimbraAdmin" />
            </t:request>
            <t:response>
                <t:select path="//admin:PingResponse" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="System_Setup" type="always">
        <t:objective>basic system setup</t:objective>
    	<t:staftask>
            <t:request>
                <server>${zimbraServer.name}</server>
                <service>PROCESS</service>
                <params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/postconf -e disable_mime_output_conversion=yes\'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.zmmtactl}</params>
            </t:request>
            <t:request>
                <server>${zimbraServer.name}</server>
                <service>PROCESS</service>
                <params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/zmmtactl restart\'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.zmmtactl}</params>
            </t:request>
        </t:staftask>
    </t:test_case>

    <t:test_case testcaseid="AcctSetup_create_account" type="always">
        <t:objective>create test accounts</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account1.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account1.id" />
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_account1.server" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account2.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account2.id" />
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_account2.server" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account3.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account3.id" />
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_account3.server" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account4.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account4.id" />
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_account4.server" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="test1_TextPlain_short" type="smoke" bugids="zcs-1870">
        <t:objective>
        1. Send a message via SendMsgRequest.  Message contents consists of non-ascii characters
        2. Verify that the received message has "Content-Transfer-Encoding: 8bit" header.
        </t:objective>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
                    <account by="name">${test_account1.name}</account>
                    <password>test123</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test >
		    <t:request>
			    <SendMsgRequest xmlns="urn:zimbraMail">
				    <m>
					    <e t="f" a="${test_account1.name}"/>
	    				<e t="t" a="${test_account2.name}"/>
		    			<su>${mail_subject1}</su>
			    		<mp ct="text/plain">
				    		<content>${plain_short_content}</content>
					    </mp>
    				</m>
	    		</SendMsgRequest>
		    </t:request>

	    	<t:response>
    			<t:select path="//mail:SendMsgResponse">
		      	    <t:select path="//mail:m" attr="id" set="message.id"/>
			    </t:select>
		    </t:response>
	    </t:test>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
                    <account by="name">${test_account2.name}</account>
                    <password>test123</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>subject:${mail_subject1}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject1}" />
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="Content-Transfer-Encoding" match="8bit" />
			</t:restServletResponse>
		</t:resttest>
    </t:test_case>

    <t:test_case testcaseid="test2_TextPlain_long" type="smoke" bugids="zcs-1870">
        <t:objective>
        1. Send a message via SendMsgRequest.  Message contents consists of non-ascii characters, 
           one line contains more than 998 bytes.
        2. Verify that the received message has "Content-Transfer-Encoding: base64" header.
        </t:objective>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
                    <account by="name">${test_account1.name}</account>
                    <password>test123</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

	    <t:test >
		    <t:request>
			    <SendMsgRequest xmlns="urn:zimbraMail">
				    <m>
					    <e t="f" a="${test_account1.name}"/>
					    <e t="t" a="${test_account2.name}"/>
					    <su>${mail_subject2}</su>
					    <mp ct="text/plain">
			    			<content>${plain_long_content}</content>
				    	</mp>
				    </m>
			    </SendMsgRequest>
		    </t:request>

    		<t:response>
	    		<t:select path="//mail:SendMsgResponse">
		    	    <t:select path="//mail:m" attr="id" set="message.id"/>
			    </t:select>
		    </t:response>
	    </t:test>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
                    <account by="name">${test_account2.name}</account>
                    <password>test123</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>subject:${mail_subject2}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject2}" />
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg2.id" />
            </t:response>
        </t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg2.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="Content-Transfer-Encoding" match="base64" />
			</t:restServletResponse>
		</t:resttest>
    </t:test_case>

    <t:test_case testcaseid="test3_TextHtml_long" type="smoke" bugids="zcs-1870">
        <t:objective>
        1. Send a message via SendMsgRequest.  Message contents consists of non-ascii characters,
           a line contains more than 998 bytes, and text/plain - text/html MIME parts. 
        2. Verify that the received message has "Content-Transfer-Encoding: base64" header.
        </t:objective>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
                    <account by="name">${test_account1.name}</account>
                    <password>test123</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

	    <t:test >
		    <t:request>
	    		<SendMsgRequest xmlns="urn:zimbraMail">
			    	<m>
		    			<e t="f" a="${test_account1.name}"/>
				    	<e t="t" a="${test_account2.name}"/>
					    <su>${mail_subject3}</su>
					    <mp ct="multipart/alternative">
					        <mp ct="text/plain">
					            <content>${plain_long_content}</content>
    					    </mp>
	    				    <mp ct="text/html">
		    			        <content>${html_long_content}</content>
			    		    </mp>
                        </mp>
                    </m>
			    </SendMsgRequest>
		    </t:request>

    		<t:response>
	    		<t:select path="//mail:SendMsgResponse">
		    	    <t:select path="//mail:m" attr="id" set="message.id"/>
			    </t:select>
    		</t:response>
	    </t:test>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
                    <account by="name">${test_account2.name}</account>
                    <password>test123</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>subject:${mail_subject3}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject3}" />
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg3.id" />
            </t:response>
        </t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg3.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="Content-Transfer-Encoding" match="base64" />
			</t:restServletResponse>
		</t:resttest>
    </t:test_case>

    <t:test_case testcaseid="test4_TextPlain_long_redirect" type="smoke" bugids="Bug86352">
        <t:objective>
        1. Send a message to account3 via LMTP.  Message contents consists of non-ascii characters
           and a line has more than 998 bytes.
        2. The account3 sets the sieve rule to redirect the received message to account4.
        3. Verify that the received message at the account4 has "Content-Transfer-Encoding: 8bit" header.
        </t:objective>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="modifyAccountRequest_account3">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${test_account3.id}</id>
					<a n="zimbraAdminSieveScriptAfter">${sieve_test_redirect}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account"
					attr="name" match="${test_account3.name}" />
			</t:response>
		</t:test>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
                    <account by="name">${test_account3.name}</account>
                    <password>test123</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:mailinjecttest>
            <t:lmtpInjectRequest>
                <filename>${plain_sjis_long.msg}</filename>
                <from>${test_account1.name}</from>
                <to>${test_account3.name}</to>
                <server>${test_account1.server}</server>
                <modify>
                    <header a="To">${test_account3.name}</header>
                    <header a="Subject">${mail_subject4}</header>
                </modify>
            </t:lmtpInjectRequest>
        </t:mailinjecttest>

		<t:response>
			<t:select path="//mail:SendMsgResponse">
			    <t:select path="//mail:m" attr="id" set="message.id"/>
			</t:select>
		</t:response>
	        
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
                    <account by="name">${test_account4.name}</account>
                    <password>test123</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>subject:${mail_subject4}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject4}" />
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg4.id" />
            </t:response>
        </t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg4.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="Content-Transfer-Encoding" match="8bit" />
			</t:restServletResponse>
		</t:resttest>
    </t:test_case>

    <t:test_case testcaseid="System_Cleanup" type="always" areas="noncluster">
        <t:objective>system cleanup</t:objective>
    	<t:staftask>
            <t:request>
                <server>${zimbraServer.name}</server>
                <service>PROCESS</service>
                <params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/postconf -e disable_mime_output_conversion=no\'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.zmmtactl}</params>
            </t:request>
            <t:request>
                <server>${zimbraServer.name}</server>
                <service>PROCESS</service>
                <params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/zmmtactl restart\'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.zmmtactl}</params>
            </t:request>
        </t:staftask>
    </t:test_case>
</t:tests>