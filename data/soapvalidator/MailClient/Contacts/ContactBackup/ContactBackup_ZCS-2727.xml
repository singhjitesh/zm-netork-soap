<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="cont_backup_zcs2727.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>


    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct_setup_Contacts_Backup" type="deprecated" >
    <t:objective>Create test accounts</t:objective>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ZCS-2727_Testcase1" type="deprecated" bugids="2727">
    <t:objective>Verify GetContactBackupListRequest currently returns the list of static backup tgz files. </t:objective>
    <t:steps>
			1. Login into account1.
			2. Fire GetContactBackupListRequest
			3. Verify 4 backup tgz files are returned in response.
    </t:steps>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test> 
	
	 <t:test>
	        <t:request>
	           <GetContactBackupListRequest xmlns="urn:zimbraMail" />
	        </t:request>
	        <t:response>
	            <t:select path="//mail:GetContactBackupListResponse/mail:backups/mail:backup[1]" match="file1.tgz"/>
	            <t:select path="//mail:GetContactBackupListResponse/mail:backups/mail:backup[2]" match="file2.tgz"/> 
	            <t:select path="//mail:GetContactBackupListResponse/mail:backups/mail:backup[3]" match="file3.tgz"/> 
	            <t:select path="//mail:GetContactBackupListResponse/mail:backups/mail:backup[4]" match="file4.tgz"/>  	            
	        </t:response>
	     </t:test>       

	</t:test_case>
	
	<t:test_case testcaseid="ZCS-2727_Testcase2" type="deprecated" bugids="2727">
    <t:objective>Verify GetContactBackupListRequest currently returns the list of static backup tgz files with user token type as JWT. </t:objective>
    <t:steps>
			1. Generate auth request for user 1 with jwt token.
			2. Fire GetContactBackupListRequest using jwt token
			3. Verify 4 backup tgz files are returned in response.
    </t:steps>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount" tokenType="JWT">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test> 
	
	 <t:test>
	        <t:request>
	           <GetContactBackupListRequest xmlns="urn:zimbraMail" />
	        </t:request>
	        <t:response>
	            <t:select path="//mail:GetContactBackupListResponse/mail:backups/mail:backup[1]" match="file1.tgz"/>
	            <t:select path="//mail:GetContactBackupListResponse/mail:backups/mail:backup[2]" match="file2.tgz"/> 
	            <t:select path="//mail:GetContactBackupListResponse/mail:backups/mail:backup[3]" match="file3.tgz"/> 
	            <t:select path="//mail:GetContactBackupListResponse/mail:backups/mail:backup[4]" match="file4.tgz"/>  	            
	        </t:response>
	     </t:test>       

	</t:test_case>
	
</t:tests>
