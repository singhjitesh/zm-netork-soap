<t:tests xmlns:t="urn:zimbraTestHarness">

	<!-- ZCS:3871- Handle removal of account profile image -->


	<t:property name="uploadFile.jpg" value="${testMailRaw.root}/zcs3871/image.jpg" />
	<t:property name="uploadFile.png" value="${testMailRaw.root}/zcs3871/image.png" />

	<t:test_case testcaseid="Ping" type="always">
		<t:objective>basic system check</t:objective>

		<t:test id="ping" required="true">
			<t:request>
				<PingRequest xmlns="urn:zimbraAdmin" />
			</t:request>
			<t:response>
				<t:select path="//admin:PingResponse" />
			</t:response>
		</t:test>

	</t:test_case>

	<t:test_case testcaseid="CreateDomainAndUser" type="always" >
		<t:objective>Create a new domain and users within it.</t:objective>

		<t:test id="admin_login" required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		
		<t:test>
			<t:request>
				<GetAccountRequest xmlns="urn:zimbraAdmin">
					<account by="name">${admin.user}</account>
				</GetAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="admin.server" />
			</t:response>
		</t:test>

		<!-- Create a custom domain to have a separate galsync account. -->

		<t:property name="domain1.name" value="zcs3871${TIME}.com" />
		<t:property name="domain1.galaccount.name" value="galaccount${TIME}@${domain1.name}" />

		<t:test required="true">
			<t:request>
				<CreateDomainRequest xmlns="urn:zimbraAdmin">
					<name>${domain1.name}</name>
					<a n="zimbraGalMode">zimbra</a>
					<a n="zimbraGalMaxResults">100</a>
				</CreateDomainRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateDomainResponse" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${domain1.galaccount.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="domain1.galaccount.id" />
				<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="domain.galaccount.server" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<CreateGalSyncAccountRequest xmlns="urn:zimbraAdmin" name="galname${TIME}${COUNTER}" type="zimbra" domain="${domain1.name}"
					server="${domain.galaccount.server}">
					<account by="id">${domain1.galaccount.id}</account>
				</CreateGalSyncAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateGalSyncAccountResponse/admin:account" attr="id" set="domain1.galaccount.id" />
			</t:response>
		</t:test>

		<t:property name="account1.name" value="user38711_${TIME}@${domain1.name}" />
		<t:property name="account2.name" value="user38712_${TIME}@${domain1.name}" />

		<t:test>
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account1.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id" />
				<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server" />
			</t:response>
		</t:test>


		<t:test>
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account2.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account2.id" />
				<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server" />
			</t:response>
		</t:test>

	</t:test_case>

	<t:test_case testcaseid="RemoveProfilePic_test1" type="smoke" bugids="zcs3871">
		<t:objective>Set a profile pic for account and remove it </t:objective>
		<t:steps>1. Account 1 user uploads a profile pic in jpg format using
			ModifyProfileImageRequest.
			2. Verify in GetInfo response profile pic id
			of
			the saved image is returned.
			3. Account 1 user removes the profile image.
			4. Verify in GetInfo response profile pic id
			of the saved image is not
			returned.
			5. Verify in GetAccountRequest, SyncGal and SearchGal request the thumbnail image is not returned
		</t:steps>

		<t:property name="server.zimbraAccount" value="${account1.server}"/>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<ModifyProfileImageRequest xmlns="urn:zimbraMail">
				</ModifyProfileImageRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:ModifyProfileImageResponse" attr="itemId" set="itemId_1" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<GetInfoRequest xmlns="urn:zimbraAccount" />
			</t:request>
			<t:response>
				<t:select path="//acct:GetInfoResponse//acct:profileImageId" match="${itemId_1}">
				</t:select>
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<ModifyProfileImageRequest xmlns="urn:zimbraMail"></ModifyProfileImageRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:ModifyProfileImageResponse" attr="itemId" set="itemId_2" emptyset="1" />
			</t:response>
		</t:test>

		<t:property name="mime"
			value="" />

		<t:test>
			<t:request>
				<GetInfoRequest xmlns="urn:zimbraAccount" />
			</t:request>
			<t:response>
				<t:select path="//acct:GetInfoResponse//acct:profileImageId" match="${itemId_2}" emptyset="1">
				</t:select>
			</t:response>
		</t:test>
		
		<t:property name="server.zimbraAccount" value="${admin.server}"/>

		<t:test id="admin_login" required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<GetAccountRequest xmlns="urn:zimbraAdmin">
					<account by="id">${account1.id}</account>
				</GetAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:GetAccountResponse/admin:account" attr="name" match="${account1.name}" />
				<t:select path="//admin:GetAccountResponse//admin:a[@n='thumbnailPhoto']" contains="${mime}" emptyset="1" />
			</t:response>
		</t:test>
		
		<t:property name="server.zimbraAccount" value="${account2.server}"/>
		
		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account2.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SyncGalRequest xmlns="urn:zimbraAccount">
					<limit>10</limit>
				</SyncGalRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:SyncGalResponse//acct:cn//acct:a[text()='${account1.name}'][1]//preceding-sibling::acct:a[@n='thumbnailPhoto']"
					contains="${mime}" emptyset="1" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchGalRequest xmlns="urn:zimbraAccount">
					<name>${account1.name}</name>
				</SearchGalRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:SearchGalResponse//acct:cn//acct:a[text()='${account1.name}'][1]//preceding-sibling::acct:a[@n='thumbnailPhoto']"
					contains="${mime}" emptyset="1" />
			</t:response>
		</t:test>


	</t:test_case>


	<t:test_case testcaseid="RemoveProfilePic_test2" type="smoke" bugids="zcs3871">
		<t:objective>Set a png profile pic after removing a profile pic </t:objective>
		<t:steps>1. Account 1 user uploads a profile pic in jpg format using
			ModifyProfileImageRequest.
			2. Verify in GetInfo response profile pic id
			of
			uploaded jpg is returned
			3. Account 1 user removes the profile image.
			4. Verify in GetInfo response profile pic id
			of the saved image is not
			returned.
			5. User 1 now uploads a new profile pic in png format.
			6. Verify in GetInfo response profile pic id
			of uploaded png is returned
		</t:steps>
		
		<t:property name="server.zimbraAccount" value="${account1.server}"/>
		
		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:uploadservlettest>
			<t:uploadServletRequest>
				<filename>${uploadFile.jpg}</filename>
			</t:uploadServletRequest>
			<t:uploadServletResponse>
				<t:select attr="id" set="image2.aid" />
			</t:uploadServletResponse>
		</t:uploadservlettest>

		<t:test>
			<t:request>
				<ModifyProfileImageRequest xmlns="urn:zimbraMail" uid="${image2.aid}"></ModifyProfileImageRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:ModifyProfileImageResponse" attr="itemId" set="itemId_2" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<GetInfoRequest xmlns="urn:zimbraAccount" />
			</t:request>
			<t:response>
				<t:select path="//acct:GetInfoResponse//acct:profileImageId" match="${itemId_2}">
				</t:select>
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<ModifyProfileImageRequest xmlns="urn:zimbraMail"></ModifyProfileImageRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:ModifyProfileImageResponse" attr="itemId" set="itemId_3" emptyset="1" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<GetInfoRequest xmlns="urn:zimbraAccount" />
			</t:request>
			<t:response>
				<t:select path="//acct:GetInfoResponse//acct:profileImageId" match="${itemId_3}" emptyset="1">
				</t:select>
			</t:response>
		</t:test>

		<t:uploadservlettest>
			<t:uploadServletRequest>
				<filename>${uploadFile.png}</filename>
			</t:uploadServletRequest>
			<t:uploadServletResponse>
				<t:select attr="id" set="image3.aid" />
			</t:uploadServletResponse>
		</t:uploadservlettest>

		<t:test>
			<t:request>
				<ModifyProfileImageRequest xmlns="urn:zimbraMail" uid="${image3.aid}"></ModifyProfileImageRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:ModifyProfileImageResponse" attr="itemId" set="itemId_4" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<GetInfoRequest xmlns="urn:zimbraAccount" />
			</t:request>
			<t:response>
				<t:select path="//acct:GetInfoResponse//acct:profileImageId" match="${itemId_4}">
				</t:select>
			</t:response>
		</t:test>

	</t:test_case>

</t:tests>