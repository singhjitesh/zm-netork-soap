<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="ldap.zimbraAuthMech" value="ldap"/>
<t:property name="ldap.zimbraAuthLdapURL" value="ldap://${LDAP.url}:${LDAP.port}/"/>
<t:property name="ldap.admin.name" value="${LDAP.bindDN}"/>
<t:property name="ldap.admin.password" value="${LDAP.bindPassword}"/>


<t:property name="zimbraPassword.value" value="zimbra123"/>

<t:property name="domain1.name" value="${COUNTER}.${TIME}.com"/>
<t:property name="account1.user" value="${LDAP.account01.user}"/>
<t:property name="account1.name" value="${account1.user}@${domain1.name}"/>
<t:property name="account2.user" value="${LDAP.account02.user}"/>
<t:property name="account2.name" value="${account2.user}@${domain1.name}"/>



<t:test_case testcaseid="ExternalLDAPAuth_ChangePassword_AccountSetup" type="always" >
    <t:objective>basic system check and setup</t:objective>
    <t:steps>
    	1. Create domain1, which external authenticates against LDAP
    	2. Create account1, without a local password, and with MUST_CHANGE_PASSWORD
    	3. Create account2, with a local password, and with MUST_CHANGE_PASSWORD
    </t:steps>
    
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

	
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
    
    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
    </t:response>
    </t:test>


	<t:test required="true" >
        <t:request>
			<CreateDomainRequest xmlns="urn:zimbraAdmin">
				<name >${domain1.name}</name>
				<a n="zimbraNotes"/>
				<a n="description"/>
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthFallbackToLocal">${globals.true}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
			</CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain1.id"/>
        </t:response>
    </t:test>
    
    <t:test required="true" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
				<a n="zimbraPasswordMustChange">TRUE</a>
				<a n="zimbraAuthLdapExternalDn">uid=authaccount01,ou=people,dc=zin2,dc=lab,dc=zimbra,dc=com</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test required="true" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${zimbraPassword.value}</password>
				<a n="zimbraPasswordMustChange">TRUE</a>
				<a n="zimbraAuthLdapExternalDn">uid=authaccount02,ou=people,dc=zin2,dc=lab,dc=zimbra,dc=com</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  



</t:test_case>


<t:test_case testcaseid="ExternalLDAPAuth_ChangePassword_01" type="functional" bugids="21539" >
    <t:objective> Auth using external password using account with MustChangePassword set </t:objective>
    <t:steps>
    	1. Create an account (without a password) on a domain with external LDAP authentication and fall back.  Set MustChangePassword to true.
    	2. Auth using external password.
    	3. Verify Auth response as domain having external auth does not have any effect of must change password. 
    </t:steps>
  
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${LDAP.account01.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse"/>
		</t:response>
	</t:test>
	
</t:test_case>
    
<t:test_case testcaseid="ExternalLDAPAuth_ChangePassword_02" type="functional" bugids="21539" >
    <t:objective> Auth using external password using account with MustChangePassword set </t:objective>
    <t:steps>
    	1. Create an account (without a password) on a domain with external LDAP authentication and fall back.  Set MustChangePassword to true.
    	2. Auth using local (zimbra) password.
    	3. Verify Auth response as domain having external auth does not have any effect of must change password. 
    </t:steps>
  
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${zimbraPassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse"/>
		</t:response>
	</t:test>
	
</t:test_case>
    

</t:tests>

