<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="AD.zimbraAuthMech" value="ad"/>
<t:property name="AD.zimbraAuthLdapURL" value="ldap://${AD.url}:${AD.port}/"/>
<t:property name="AD.zimbraAuthLdapBindDn" value="%u@${AD.domain}"/>


<t:property name="AD.zimbraGalLdapFilter" value="ad"/>
<t:property name="AD.zimbraGalAutoCompleteLdapFilter" value="adAutoComplete"/>
<t:property name="AD.zimbraGalLdapSearchBase" value="cn=users,dc=zimbraqa,dc=com"/>
<t:property name="AD.zimbraGalLdapBindDn" value="${AD.userName}@${AD.domain}"/>
<t:property name="AD.zimbraGalLdapBindPassword" value="${AD.password}"/>


<t:property name="ldap.zimbraAuthMech" value="ldap"/>
<t:property name="ldap.zimbraAuthLdapURL" value="ldap://${LDAP.url}:${LDAP.port}/"/>
<t:property name="ldap.admin.name" value="${LDAP.bindDN}"/>
<t:property name="ldap.admin.password" value="${LDAP.bindPassword}"/>


<t:property name="domain1.name" value="${COUNTER}.${TIME}.com"/>
<t:property name="domain2.name" value="${COUNTER}.${TIME}.com"/>

<t:property name="account1.user" value="${AD.account01.user}"/>
<t:property name="account1.name" value="${account1.user}@${domain1.name}"/>
<t:property name="account2.user" value="${AD.account02.user}"/>
<t:property name="account2.name" value="${account2.user}@${domain1.name}"/>

<t:property name="account3.user" value="${AD.account01.user}"/>
<t:property name="account3.name" value="${account3.user}@${domain2.name}"/>
<t:property name="account4.user" value="${AD.account02.user}"/>
<t:property name="account4.name" value="${account4.user}@${domain2.name}"/>



<t:test_case testcaseid="ExternalAuth_AccountSetup" type="always" >
    <t:objective>basic system check</t:objective>
    <t:steps>
    	1. Create domain1, which external authenticates against AD
    </t:steps>
    
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
    
    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
    </t:response>
    </t:test>

	<t:test >
        <t:request>
			<CreateDomainRequest xmlns="urn:zimbraAdmin">
				<name >${domain1.name}</name>
				<a n="zimbraNotes"/>
				<a n="description"/>
				<a n="zimbraGalMode">ldap</a>
				<a n="zimbraAuthLdapURL">${AD.zimbraAuthLdapURL}</a>
				<a n="zimbraAuthLdapBindDn">${AD.zimbraAuthLdapBindDn}</a>
				<a n="zimbraAuthMech">${AD.zimbraAuthMech}</a>
			</CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain1.id"/>
        </t:response>
    </t:test>

	<t:test required="true" >
        <t:request>
			<CreateDomainRequest xmlns="urn:zimbraAdmin">
				<name >${domain2.name}</name>
				<a n="zimbraNotes"/>
				<a n="description"/>
                <a n="zimbraAuthMech">${ldap.zimbraAuthMech}</a>
                <a n="zimbraAuthLdapURL">${ldap.zimbraAuthLdapURL}</a>
                <a n="zimbraAuthLdapSearchBindDn">${LDAP.bindDN}</a>
                <a n="zimbraAuthLdapSearchBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraAuthLdapSearchFilter">${LDAP.LDAPfilter}</a>                
                <a n="zimbraAuthLdapSearchBase">${LDAP.LDAPsearchBase}</a>
			</CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain1.id"/>
        </t:response>
    </t:test>
    
    

</t:test_case>


<t:test_case testcaseid="ExternalAuthentication_AuthBasic_01" type="smoke" >
    <t:objective> Authenticate as an account with external AD authentication </t:objective>
    <t:steps>
    	1. Create an account (without a password) on a domain with external AD authentication.
    	2. Set up account auth query to the hardcoded account on the AD
    	3. Auth using the new account using the AD password. 
    </t:steps>
  
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
    </t:test>


    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${AD.account01.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
	
</t:test_case>
    

<t:test_case testcaseid="ExternalAuthentication_CreateDomain_02" type="smoke" >
    <t:objective> Create a domain with external LDAP Authentication </t:objective>
  
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
    </t:test>


    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${LDAP.account01.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
	
    
    
</t:test_case>
    

    
</t:tests>

