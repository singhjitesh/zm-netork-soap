<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="wiki.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account1.wiki1.note" value="wikinote1.${TIME}.${COUNTER}"/>
<t:property name="account1.wiki2.note" value="wikinote2.${TIME}.${COUNTER}"/>
<t:property name="account1.wiki3.note" value="wikinote3.${TIME}.${COUNTER}"/>

<t:property name="account1.wiki1.sec" value="wikisec1.${TIME}.${COUNTER}"/>
<t:property name="account1.wiki2.sec" value="wikisec2.${TIME}.${COUNTER}"/>
<t:property name="account1.wiki3.sec" value="wikisec3.${TIME}.${COUNTER}"/>
<t:property name="account1.wiki4.sec" value="wikisec4.${TIME}.${COUNTER}"/>
<t:property name="account1.wiki5.sec" value="wikisec5.${TIME}.${COUNTER}"/>
<t:property name="account1.wiki6.sec" value="wikisec6.${TIME}.${COUNTER}"/>
<t:property name="account1.wiki7.sec" value="wikisec7.${TIME}.${COUNTER}"/>
<t:property name="account1.wiki8.sec" value="wikisec8.${TIME}.${COUNTER}"/>

<t:property name="account1.wiki1.pgname" value="wikipg1.${TIME}.${COUNTER}"/>
<t:property name="account1.wiki2.pgname" value="wikipg2.${TIME}.${COUNTER}"/>
<t:property name="account1.wiki3.pgname" value="wikipg3.${TIME}.${COUNTER}"/>
<t:property name="account1.wiki4.pgname" value="wikipg4.${TIME}.${COUNTER}"/>

<t:property name="pname" value="1"/> <!-- Folder's parent ID -->
<t:property name="sometext" value="fold      er.${TIME}.${COUNTER}"/>
<t:property name="blank" value=""/>
<t:property name="space" value="            "/>
<t:property name="spchar" value=":/\\.;&lt;*''"/>
<t:property name="long" value="1abcdefghijklmnopqrstuvwxyz2abcdefghijklmnopqrstuvwxyz3abcdefghijklmnopqrstuvwxyz"/> 
<t:property name="zero" value="0"/>
<t:property name="negative" value="-1"/>
<t:property name="nonexisting" value="0"/>
<t:property name="nonlatinname" value="&#12465;&#12525;&#12525;&#36557;&#26361;"/>    


<t:property name="test_acct.server" value="NOT_DEFINED"/>

<t:test_case testcaseid="WikiBasicPing" type="deprecated" >
 <t:objective>basic system check</t:objective>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>	
	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="WikiBasicAccountSetup_WikiFolderRequest" type="deprecated" >
	<t:objective>Create test account.</t:objective>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraFeatureNotebookEnabled">TRUE</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="test_acct.server"/>
        </t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="WikiFolderRequest01" type="deprecated" >
	<t:objective>Create a wiki folder with valid name.</t:objective>
	<t:steps>
			1. Login into the test account.
			2. Create the folder.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.notebook}']" attr="id" set="wiki.folder.id"/>
		</t:response>
	</t:test>

	<t:test id="WikiFolderRequest1a">
		<t:request>
			<CreateFolderRequest xmlns="urn:zimbraMail">
				<folder name="${account1.wiki1.sec}" l="${wiki.folder.id}" view="wiki"/>
			</CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="name" match="${account1.wiki1.sec}"/>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.wiki1.sec.id"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="WikiFolderRequest02" type="deprecated" >
	<t:objective>Create a wiki folder and save a normal wiki page under it by name.</t:objective>
	<t:steps>
			1. Login into the test account.
			2. Create the folder.
			3. Create a Wiki page under the folder.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

 	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.notebook}']" attr="id" set="wiki.folder.id"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateFolderRequest xmlns="urn:zimbraMail">
				<folder name="${account1.wiki2.sec}" l="${wiki.folder.id}" view="wiki"/>
			</CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="name" match="${account1.wiki2.sec}"/>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.wiki2.sec.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
			<SaveWikiRequest xmlns="urn:zimbraMail">
			  <w name="${account1.wiki2.pgname}" l="${account1.wiki2.sec.id}">
			  Now is the time for all good men to come to the aid of their country.
			  </w>
			</SaveWikiRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveWikiResponse/mail:w" attr="id" set="account1.wiki2.id"/>
            <t:select path="//mail:SaveWikiResponse/mail:w" attr="ver" match="^1$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="WikiFolderRequest03" type="deprecated" >
	<t:objective>Create wiki folders and save a normal wiki pages under it by name.</t:objective>
	<t:steps>
			1. Login into the test account.
			2. Create 2 folders.
			3. Create a Wiki page under the last folder.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

 	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.notebook}']" attr="id" set="wiki.folder.id"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateFolderRequest xmlns="urn:zimbraMail">
				<folder name="${account1.wiki3.sec}" l="${wiki.folder.id}" view="wiki"/>
			</CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="name" match="${account1.wiki3.sec}"/>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.wiki3.sec.id"/>
        </t:response>
    </t:test>

	<t:test >
		<t:request>
			<CreateFolderRequest xmlns="urn:zimbraMail">
				<folder name="${account1.wiki4.sec}" l="${account1.wiki3.sec.id}" view="wiki"/>
			</CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="name" match="${account1.wiki4.sec}"/>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.wiki4.sec.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
			<SaveWikiRequest xmlns="urn:zimbraMail">
			  <w name="${account1.wiki3.pgname}" l="${account1.wiki4.sec.id}">
			  Now is the time for all good men to come to the aid of their country.
			  </w>
			</SaveWikiRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveWikiResponse/mail:w" attr="id" set="account1.wiki4.id"/>
            <t:select path="//mail:SaveWikiResponse/mail:w" attr="ver" match="^1$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="WikiFolderRequest04" type="deprecated" >
	<t:objective>Create  normal wiki page under parent folder.</t:objective>
	<t:steps>
			1. Login into the test account.
			2. Create a Wiki page under the parent folder.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

 	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.notebook}']" attr="id" set="wiki.folder.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
			<SaveWikiRequest xmlns="urn:zimbraMail">
			  <w name="${account1.wiki1.pgname}" l="${wiki.folder.id}">
			  Now is the time for all good men to come to the aid of their country.
			  </w>
			</SaveWikiRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveWikiResponse/mail:w" attr="id" set="account1.wiki5.id"/>
            <t:select path="//mail:SaveWikiResponse/mail:w" attr="ver" match="^1$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="WikiFolderRequest05" type="deprecated" >
	<t:objective>Create wiki folder under parent folder with sometext/blank/space/spchar/long/zero/negative in name.</t:objective>
	<t:steps>
			1. Login into the test account.
			2. Create a Wiki page under the parent folder.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

 	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.notebook}']" attr="id" set="wiki.folder.id"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateFolderRequest xmlns="urn:zimbraMail">
				<folder name="${blank}" l="${wiki.folder.id}" view="wiki"/>
			</CreateFolderRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="^mail.INVALID_NAME"/>
         </t:response>
    </t:test>

	<t:test >
		<t:request>
			<CreateFolderRequest xmlns="urn:zimbraMail">
				<folder name="${sometext}" l="${wiki.folder.id}" view="wiki"/>
			</CreateFolderRequest>
        </t:request>
        <t:response>
             <t:select path="//mail:CreateFolderResponse/mail:folder" />
        </t:response>
    </t:test>

	<t:test >
		<t:request>
			<CreateFolderRequest xmlns="urn:zimbraMail">
				<folder name="${space}" l="${wiki.folder.id}" view="wiki"/>
			</CreateFolderRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="^mail.INVALID_NAME"/>
        </t:response>
    </t:test>

	<t:test >
		<t:request>
			<CreateFolderRequest xmlns="urn:zimbraMail">
				<folder name="${spchar}" l="${wiki.folder.id}" view="wiki"/>
			</CreateFolderRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="^mail.INVALID_NAME"/>
        </t:response>
    </t:test>

	<t:test >
		<t:request>
			<CreateFolderRequest xmlns="urn:zimbraMail">
				<folder name="${long}" l="${wiki.folder.id}" view="wiki"/>
			</CreateFolderRequest>
        </t:request>
        <t:response>
             <t:select path="//mail:CreateFolderResponse/mail:folder" />
         </t:response>
    </t:test>

	<t:test >
		<t:request>
			<CreateFolderRequest xmlns="urn:zimbraMail">
				<folder name="${zero}" l="${wiki.folder.id}" view="wiki"/>
			</CreateFolderRequest>
        </t:request>
        <t:response>
             <t:select path="//mail:CreateFolderResponse/mail:folder" />
        </t:response>
    </t:test>

	<t:test >
		<t:request>
			<CreateFolderRequest xmlns="urn:zimbraMail">
				<folder name="${negative}" l="${wiki.folder.id}" view="wiki"/>
			</CreateFolderRequest>
        </t:request>
        <t:response>
	        <t:select path="//mail:CreateFolderResponse/mail:folder" />
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="WikiFolderRequest06" type="deprecated" >
    <t:objective>Create a folder with duplicate folder name </t:objective>

    <t:test depends="WikiFolderRequest1a">
		<t:request>
			<CreateFolderRequest xmlns="urn:zimbraMail">
				<folder name="${account1.wiki1.sec}" l="${wiki.folder.id}" view="wiki"/>
			</CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^mail.ALREADY_EXISTS"/>        
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="WikiFolderRequest07" type="deprecated" >
    <t:objective>Create a folder with nonexisting parent folder name </t:objective>

    <t:test>
		<t:request>
			<CreateFolderRequest xmlns="urn:zimbraMail">
				<folder name="${account1.wiki5.sec}" l="${nonexisting}" view="wiki"/>
			</CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^mail.NO_SUCH_FOLDER|^mail.NO_SUCH_ITEM"/>        
        </t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="WikiFolderRequest08" type="deprecated"  >
    <t:objective>Create a folder with blank parent folder name </t:objective>

    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.wiki6.sec}" l="${blank}" view="wiki"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>    
        </t:response>
</t:test>

</t:test_case>


<t:test_case testcaseid="WikiFolderRequest09" type="deprecated" >
    <t:objective>Create a folder with No parent folder name </t:objective>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.wiki7.sec}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" />
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="WikiFolderRequest10" type="deprecated">
    <t:objective>Create a folder with non-latin-1 name </t:objective>

    <t:test id="WikiFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${nonlatinname}" l="${wiki.folder.id}" view="wiki"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" />
        </t:response>
	</t:test>

</t:test_case>    

<t:test_case testcaseid="WikiFolderRequest11" type="deprecated" >
    <t:objective>Create a Notebook. </t:objective>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.wiki1.note}" l="${pname}" view="wiki"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="name" match="${account1.wiki1.note}" />
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="WikiFolderRequest12" type="deprecated" >
    <t:objective>Create a Notebook and a folder and save a normal wiki page under it. </t:objective>

	<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.wiki2.note}" l="${pname}" view="wiki"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="{wikisecond.id}"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${account1.wiki2.note}']" attr="id" set="wiki.folder.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.wiki8.sec}" l="${wiki.folder.id}" view="wiki"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="{account1.wiki8.sec.id}" />
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder/mail:folder[@name='${account1.wiki8.sec}']" attr="id" set="account1.wiki8.sec.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
			<SaveWikiRequest xmlns="urn:zimbraMail">
			  <w name="${account1.wiki4.pgname}" l="${account1.wiki8.sec.id}" >
			  Now is the time for all good men to come to the aid of their country.
			  </w>
			</SaveWikiRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveWikiResponse/mail:w" />
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="WikiFolderRequest13" type="deprecated" >
    <t:objective>Create a Notebook with sometext/blank/space/spchar/long/zero/negative in name. </t:objective>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${sometext}" l="${pname}" view="wiki"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="name" match="${sometext}" />
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${blank}" l="${pname}" view="wiki"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="^mail.INVALID_NAME"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${space}" l="${pname}" view="wiki"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="^mail.INVALID_NAME"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${spchar}" l="${pname}" view="wiki"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="^mail.INVALID_NAME"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${long}" l="${pname}" view="wiki"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="name" match="${long}" />
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${zero}" l="${pname}" view="wiki"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="name" match="${zero}" />
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${negative}" l="${pname}" view="wiki"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="name" match="${negative}" />
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="WikiFolderRequest14" type="deprecated" >
    <t:objective>Create a Notebook with No parent folder </t:objective>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.wiki3.note}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" />
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="WikiFolderRequest15" type="deprecated">
    <t:objective>Create a folder with non-latin-1 name </t:objective>

    <t:test id="WikiFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${nonlatinname}" l="${pname}" view="wiki"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" />
        </t:response>
	</t:test>

</t:test_case>    

</t:tests>
