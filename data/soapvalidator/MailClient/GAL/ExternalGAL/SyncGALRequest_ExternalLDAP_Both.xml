<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain0.name" value="domain.${TIME}.${COUNTER}.com"/>

<t:property name="account1.name" value="gal${TIME}${COUNTER}@${domain0.name}"/>
<t:property name="account2.name" value="${LDAP.GAL.account02.user}@${domain0.name}"/>

<!-- Accounts for Test Case: SyncGalRequest_ExternalAD_Both_Basic_02 -->
<t:property name="cos3.name" value="cos${TIME}${COUNTER}"/>
<t:property name="account3.name" value="gal.${TIME}.${COUNTER}@${domain0.name}"/>
<t:property name="account4.name" value="gal.${TIME}.${COUNTER}@${domain0.name}"/>
<t:property name="resource4.name" value="resource.${TIME}.${COUNTER}@${domain0.name}"/>
<t:property name="account5.name" value="gal.${TIME}.${COUNTER}@${domain0.name}"/>


<t:property name="LDAP.bindDN" value="${LDAP.bindDN}"/>
<t:property name="LDAP.zimbraGalLdapURL" value="ldap://${LDAP.url}:${LDAP.port}/"/> 




<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SyncGalRequest_ExternalLDAP_Both_Acct_Setup" type="always" >
    <t:objective>Login to the account </t:objective>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>


    <t:test id="CreateDomainRequest0a">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain0.name}</name>
				<a n="zimbraGalMode">both</a>
				<a n="zimbraGalMaxResults">100</a>
				<a n="zimbraGalLdapURL">${LDAP.zimbraGalLdapURL}</a>
				<a n="zimbraGalLdapSearchBase">${LDAP.LDAPsearchBase}</a>
				<a n="zimbraGalLdapBindDn">${LDAP.bindDN}</a>
				<a n="zimbraGalLdapBindPassword">${LDAP.bindPassword}</a>
				<a n="zimbraGalLdapFilter">${LDAP.GALfilter}</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain0.id"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  


	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    
    <t:test id="auth1" required="true">
        <t:request>
	        <AuthRequest xmlns="urn:zimbraAccount">
	            <account by="name">${account1.name}</account>
	            <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SyncGalRequest_ExternalLDAP_Both_Basic_01" type="smoke" >
    <t:objective>Sync GAL against both the internal and external (LDAP) GAL servers</t:objective>
	<t:steps>
	1. Login as account1
	2. Send SyncGalRequest (no token)
	3. Accounts from the internal LDAP server and the external LDAP server should be returned
	</t:steps>
	
	<t:test>
		<t:request>
			<SyncGalRequest xmlns="urn:zimbraAccount"/> 
		</t:request>
		<t:response>
 			<t:select path="//acct:SyncGalResponse">
	            <t:select path="//acct:cn[@id='${LDAP.GAL.account01.id}']">
	            	<t:select path="//acct:a[@n='email']" match="${LDAP.GAL.account01.email}"/>                        
	            </t:select>
	            <t:select path="//acct:a[@n='email']" match="${account2.name}"/>                        
 			</t:select>
		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="SyncGalRequest_ExternalLDAP_Both_Basic_02" type="functional" bugids="10501" >
    <t:objective>SyncGalRequest against both internal and external (AD) servers should return accounts and resources</t:objective>
	<t:steps>
	1. AD server contains normal accounts
	2. Login as admin.
		A. Create a normal account on zimbra
		B. Create a resource account on zimbra
		C. Create a normal account on zimbra (HideInGal=TRUE)
	3. Login as account1
	4. Send SyncGalRequest (no token)
	5. Expected Accounts (zimbra), Resources (zimbra) and Accounts (AD) should all be returned
	</t:steps>
	
    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id = "CreateCosRequest1a">
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name >${cos3.name}</name>        
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="name" match="${cos3.name}"/>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos3.id"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraCOSId">${cos3.id}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraCOSId">${cos3.id}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse"/>
        </t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account5.name}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraCOSId">${cos3.id}</a>
				<a n="zimbraHideInGal">${globals.true}</a>
			</CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
			<CreateCalendarResourceRequest xmlns="urn:zimbraAdmin">
				<name>${resource4.name}</name>
				<a n="zimbraCOSId">${cos3.id}</a>
				<a n="displayName">${resource4.name}</a>
				<a n="zimbraCalResType">Location</a>
				<a n="zimbraCalResAutoAcceptDecline">TRUE</a>
				<a n="zimbraCalResAutoDeclineIfBusy">TRUE</a>
			</CreateCalendarResourceRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCalendarResourceResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account3.server}"/>
    
    <t:test >
        <t:request>
	        <AuthRequest xmlns="urn:zimbraAccount">
	            <account by="name">${account3.name}</account>
	            <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SyncGalRequest xmlns="urn:zimbraAccount"/> 
		</t:request>
		<t:response>
 			<t:select path="//acct:SyncGalResponse">
	            <t:select path="//acct:a[@n='email']" match="${LDAP.GAL.account01.email}"/>                        
	            <t:select path="//acct:a[@n='email']" match="${account4.name}"/>                        
	            <t:select path="//acct:a[@n='email']" match="${resource4.name}"/>                        
	            <t:select path="//acct:a[@n='email']" match="${account5.name}" emptyset="1"/>                        
 			</t:select>
		</t:response>
    </t:test>  

</t:test_case>





</t:tests>
