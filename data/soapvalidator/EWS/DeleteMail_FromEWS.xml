<t:tests xmlns:t="urn:zimbraTestHarness">
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}" />
	<t:property name="test_account1.username"
		value="test1${TIME}.${COUNTER}" />		
	<t:property name="test_account1.name"
		value="${test_account1.username}@${defaultdomain.name}" />		
	<t:property name="test_account1.password" value="test123" />	
	<t:property name="test_account2.username"
		value="test2${TIME}.${COUNTER}" />
	<t:property name="test_account2.name"
		value="${test_account2.username}@${defaultdomain.name}" />
	<t:property name="test_account2.password" value="test123" />	
			
	<t:property name="test_acct.server" value="NOT_DEFINED" />	
	<t:property name="message.subject1" value="subject1${TIME}.${COUNTER}" />	
	<t:property name="message.content1" value="Message 1 test content" />	
	<t:property name="message.subject2" value="subject2${TIME}.${COUNTER}" />	
	<t:property name="message.content2" value="Message 2 test content" />	
	
	<t:test_case testcaseid="acct_setup" type="always">
		<t:objective>Create a test account</t:objective>
		<steps>
			1. Login to admin account
			2. Create a test_account1 to test tombstone, test_account2 to test Dumpster feature
		</steps>

		<t:test id="admin_login" required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="create_test_account1" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account1.name}</name>
					<password>${test_account1.password}</password>
					<a n="zimbraFeatureEwsEnabled">TRUE</a>		
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account1.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="test_acct.server" />
			</t:response>
		</t:test>
		
		<t:test id="create_test_account2" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account2.name}</name>
					<password>${test_account2.password}</password>
					<a n="zimbraFeatureEwsEnabled">TRUE</a>
					<a n="zimbraDumpsterEnabled">TRUE</a>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account2.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="test_acct.server" />
			</t:response>
		</t:test>
		
	</t:test_case>

	<t:test_case testcaseid="SoftDeleteEmail_FromEWS" type="smoke">
		<t:objective>Soft delete email and verify it is moved to Trash in EWS client and verify on server
			</t:objective>
			<t:steps>1.Send mail from user2 to user1 from Server and sync to EWS
			2. Soft delete email and verify it is moved to trash in EWS
			3. Sync on ZWC and verify email is moved to trash
			</t:steps>
		
		<!-- Send mail from user2 to user1 from Server and sync on EWS client -->
		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${test_account2.name}</account>
					<password>${test_account2.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>		
			
		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a='${test_account1.name}' />						
						<su>${message.subject1}</su>
						<mp ct="text/plain">
							<content>${message.content1}</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="message1.id" />
			</t:response>
		</t:test>
		
		<t:test required="true">
			<t:request ews="true" username="${test_account1.name}" password="${test_account1.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<GetFolder
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<FolderShape>
								<t:BaseShape>AllProperties</t:BaseShape>
							</FolderShape>
							<FolderIds>
								<t:DistinguishedFolderId Id="inbox">
									<t:Mailbox>
										<t:EmailAddress>${test_account1.name}</t:EmailAddress>
									</t:Mailbox>
								</t:DistinguishedFolderId>
							</FolderIds>
						</GetFolder>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]" attr="ResponseClass"
					match="Success" />
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:FolderId"
					attr="Id" match="2" />
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:FolderId"
					attr="Id" set="inbox.id" />
				<t:select
					path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:DisplayName"
					match="Inbox" />
			</t:response>
		</t:test>
		
		<t:test>
			<t:request ews="true" username="${test_account1.name}" password="${test_account1.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<SyncFolderItems
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<ItemShape>
								<t:BaseShape>IdOnly</t:BaseShape>
							</ItemShape>
							<SyncFolderId>
								<t:FolderId Id="${inbox.id}" />
							</SyncFolderId>
							<SyncState />
							<Ignore />
							<MaxChangesReturned>512</MaxChangesReturned>
						</SyncFolderItems>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:SyncFolderItemsResponseMessage"
					attr="ResponseClass" match="Success" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewstype:Create//ewstype:ItemId"
					attr="Id" set="mail01_id" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewstype:Create//ewstype:ItemId"
					attr="ChangeKey" set="mail01_changeKey" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewsmsg:SyncState"
				    set="SyncState01" />
			</t:response>		
		</t:test>	
		
		<t:test>
			<t:request ews="true" username="${test_account1.name}" password="${test_account1.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<GetItem
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<ItemShape>
								<t:BaseShape>IdOnly</t:BaseShape>
								<t:BodyType>Best</t:BodyType>
								<t:AdditionalProperties>
									<t:FieldURI FieldURI="item:Sensitivity" />
									<t:ExtendedFieldURI PropertyTag="0x10F4"
										PropertyType="Boolean" />
									<t:FieldURI FieldURI="item:Body" />
									<t:FieldURI FieldURI="message:From" />
									<t:FieldURI FieldURI="message:Sender" />
									<t:FieldURI FieldURI="item:Subject" />
									<t:FieldURI FieldURI="message:IsRead" />
									<t:FieldURI FieldURI="item:Importance"/>
								</t:AdditionalProperties>
							</ItemShape>
							<ItemIds>
								<t:ItemId Id="${mail01_id}" ChangeKey="${mail01_changeKey}" />
							</ItemIds>
						</GetItem>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:GetItemResponseMessage" attr="ResponseClass"
					match="Success" />
				<t:select path="//ewsmsg:GetItemResponseMessage//ewstype:Subject"
					match="${message.subject1}" />
				<t:select path="//ewsmsg:GetItemResponseMessage//ewstype:Body"  contains="${message.content1}" />
				<t:select path="//ewsmsg:GetItemResponseMessage//ewstype:Importance"  match="Normal" />		
			</t:response>
		</t:test>	
		
		<!-- Soft delete mail using EWS -->
		<t:test>
			<t:request ews="true" username="${test_account1.name}" password="${test_account1.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<MoveItem
							 xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<ToFolderId>
							 	<t:FolderId Id="3"/>
							</ToFolderId>
							<ItemIds>
							 	<t:ItemId Id="${mail01_id}" ChangeKey="${mail01_changeKey}" />
							</ItemIds>
						</MoveItem>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:MoveItemResponseMessage" attr="ResponseClass"
					match="Success" />		
			</t:response>
		</t:test>	
		
		<t:test>
			<t:request ews="true" username="${test_account1.name}" password="${test_account1.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<SyncFolderItems
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<ItemShape>
								<t:BaseShape>IdOnly</t:BaseShape>
							</ItemShape>
							<SyncFolderId>
								<t:FolderId Id="3" />
							</SyncFolderId>
							<SyncState/>
							<Ignore />
							<MaxChangesReturned>512</MaxChangesReturned>
						</SyncFolderItems>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:SyncFolderItemsResponseMessage"
					attr="ResponseClass" match="Success" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewstype:Create[1]//ewstype:ItemId"
					attr="Id" set="mail02_id" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewstype:Create[1]//ewstype:ItemId"
					attr="ChangeKey" set="mail02_changeKey" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewsmsg:SyncState"
				    set="SyncState02" />
			</t:response>		
		</t:test>
		
		<t:test>
			<t:request ews="true" username="${test_account1.name}" password="${test_account1.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<GetItem
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<ItemShape>
								<t:BaseShape>IdOnly</t:BaseShape>
								<t:BodyType>Best</t:BodyType>
								<t:AdditionalProperties>
									<t:FieldURI FieldURI="item:Sensitivity" />
									<t:ExtendedFieldURI PropertyTag="0x10F4"
										PropertyType="Boolean" />
									<t:FieldURI FieldURI="item:Body" />
									<t:FieldURI FieldURI="message:From" />
									<t:FieldURI FieldURI="message:Sender" />
									<t:FieldURI FieldURI="item:Subject" />
									<t:FieldURI FieldURI="message:IsRead" />
								</t:AdditionalProperties>
							</ItemShape>
							<ItemIds>
								<t:ItemId Id="${mail02_id}" ChangeKey="${mail02_changeKey}" />
							</ItemIds>
						</GetItem>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:GetItemResponseMessage" attr="ResponseClass"
					match="Success" />
				<t:select path="//ewsmsg:GetItemResponseMessage//ewstype:Subject"
					match="${message.subject1}" />
				<t:select path="//ewsmsg:GetItemResponseMessage//ewstype:Body"  contains="${message.content1}" />
			</t:response>
		</t:test>
		
		<!-- Verify in server that soft deleted mail is present in Trash folder-->		
		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${test_account1.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		    
	    <t:test>
	        <t:request>
	            <SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="dateDesc" offset="0" limit="25">
	                <query>in:trash subject:${message.subject1}</query>	              
	            </SearchRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//mail:SearchResponse//mail:su" match="${message.subject1}" />	
	            <t:select path="//mail:SearchResponse//mail:m" attr="id" set="mail_id_wc" />	            
	        </t:response>
	     </t:test>
	     
	      <t:test>
			<t:request>
				<GetMsgRequest xmlns="urn:zimbraMail">
					<m id="${mail_id_wc}" />
				</GetMsgRequest>
			</t:request>
			<t:response>
			 	 <t:select path="//mail:GetMsgResponse//mail:su"  contains="${message.subject1}"/> 
			 	 <t:select path="//mail:GetMsgResponse//mail:content"  contains="${message.content1}"/>      			
			</t:response>
		</t:test>
	</t:test_case>
	
	<t:test_case testcaseid="HardDeleteEmail_FromEWS" type="smoke">
		<t:objective>Hard delete email and verify it is not present in Trash in EWS client and verify on server
			</t:objective>
			<t:steps>1.Send mail from user1 to user2 from Server and sync to EWS
			2. Hard delete email and verify it is not present in trash in EWS
			3. Sync on ZWC and verify email is not present in trash
			</t:steps>		
		
		<!-- Send mail from user1 to user2 from Server and sync on EWS client-->
		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${test_account1.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>		
			
		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a='${test_account2.name}' />						
						<su>${message.subject2}</su>
						<mp ct="text/plain">
							<content>${message.content2}</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="message2.id" />
			</t:response>
		</t:test>
		
		<t:test required="true">
			<t:request ews="true" username="${test_account2.name}" password="${test_account2.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<GetFolder
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<FolderShape>
								<t:BaseShape>AllProperties</t:BaseShape>
							</FolderShape>
							<FolderIds>
								<t:DistinguishedFolderId Id="inbox">
									<t:Mailbox>
										<t:EmailAddress>${test_account2.name}</t:EmailAddress>
									</t:Mailbox>
								</t:DistinguishedFolderId>
							</FolderIds>
						</GetFolder>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]" attr="ResponseClass"
					match="Success" />
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:FolderId"
					attr="Id" match="2" />
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:FolderId"
					attr="Id" set="inbox.id1" />
				<t:select
					path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:DisplayName"
					match="Inbox" />
			</t:response>
		</t:test>
		
		<t:test>
			<t:request ews="true" username="${test_account2.name}" password="${test_account2.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<SyncFolderItems
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<ItemShape>
								<t:BaseShape>IdOnly</t:BaseShape>
							</ItemShape>
							<SyncFolderId>
								<t:FolderId Id="${inbox.id1}" />
							</SyncFolderId>
							<SyncState />
							<Ignore />
							<MaxChangesReturned>512</MaxChangesReturned>
						</SyncFolderItems>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:SyncFolderItemsResponseMessage"
					attr="ResponseClass" match="Success" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewstype:Create//ewstype:ItemId"
					attr="Id" set="mail03_id" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewstype:Create//ewstype:ItemId"
					attr="ChangeKey" set="mail03_changeKey" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewsmsg:SyncState"
				    set="SyncState03" />
			</t:response>		
		</t:test>	
		
		<t:test>
			<t:request ews="true" username="${test_account2.name}" password="${test_account2.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<GetItem
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<ItemShape>
								<t:BaseShape>IdOnly</t:BaseShape>
								<t:BodyType>Best</t:BodyType>
								<t:AdditionalProperties>
									<t:FieldURI FieldURI="item:Sensitivity" />
									<t:ExtendedFieldURI PropertyTag="0x10F4"
										PropertyType="Boolean" />
									<t:FieldURI FieldURI="item:Body" />
									<t:FieldURI FieldURI="message:From" />
									<t:FieldURI FieldURI="message:Sender" />
									<t:FieldURI FieldURI="item:Subject" />
									<t:FieldURI FieldURI="message:IsRead" />
									<t:FieldURI FieldURI="item:Importance"/>
								</t:AdditionalProperties>
							</ItemShape>
							<ItemIds>
								<t:ItemId Id="${mail03_id}" ChangeKey="${mail03_changeKey}" />
							</ItemIds>
						</GetItem>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:GetItemResponseMessage" attr="ResponseClass"
					match="Success" />
				<t:select path="//ewsmsg:GetItemResponseMessage//ewstype:Subject"
					match="${message.subject2}" />
				<t:select path="//ewsmsg:GetItemResponseMessage//ewstype:Body"  contains="${message.content2}" />
				<t:select path="//ewsmsg:GetItemResponseMessage//ewstype:Importance"  match="Normal" />		
			</t:response>
		</t:test>	
		
		<!-- Hard delete mail using EWS for Dumpster enabled user -->		
		<t:test>
			<t:request ews="true" username="${test_account2.name}" password="${test_account2.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>						
						<DeleteItem 
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages" DeleteType="SoftDelete">
							<ItemIds>
								<t:ItemId Id="${mail03_id}"/>
							</ItemIds>
						</DeleteItem>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:GetItemResponseMessage" attr="ResponseClass"
					match="Success" />		
			</t:response>
		</t:test>	
		
		<!-- Verify on EWS that hard deleted mail is not present in trash folder -->	    
		<t:test required="true">
			<t:request ews="true" username="${test_account2.name}" password="${test_account2.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<GetFolder
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<FolderShape>
								<t:BaseShape>AllProperties</t:BaseShape>
							</FolderShape>
							<FolderIds>
								<t:DistinguishedFolderId Id="deleteditems">
									<t:Mailbox>
										<t:EmailAddress>${test_account2.name}</t:EmailAddress>
									</t:Mailbox>
								</t:DistinguishedFolderId>
							</FolderIds>
						</GetFolder>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]" attr="ResponseClass"
					match="Success" />
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:FolderId"
					attr="Id" match="3" />
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:FolderId"
					attr="Id" set="trash2.id" />
				<t:select
					path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:DisplayName"
					match="Trash" />
			</t:response>
		</t:test>
		
		<t:test>
			<t:request ews="true" username="${test_account2.name}" password="${test_account2.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<SyncFolderItems
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<ItemShape>
								<t:BaseShape>IdOnly</t:BaseShape>
							</ItemShape>
							<SyncFolderId>
								<t:FolderId Id="${trash2.id}" />
							</SyncFolderId>
							<SyncState />
							<Ignore />
							<MaxChangesReturned>512</MaxChangesReturned>
						</SyncFolderItems>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:SyncFolderItemsResponseMessage"
					attr="ResponseClass" match="Success" />							
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewsmsg:Changes//ewstype:Create[2]//ewstype:Subject"
					match="${message.subject2}" emptyset="1" />						
			</t:response>		
		</t:test>	
		
		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${test_account2.name}</account>
					<password>${test_account2.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
 		
 		<!-- Verify on Server that hard deleted mail is not present in Inbox folder -->			 		
	    <t:test>
	        <t:request>
	            <SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="dateDesc" offset="0" limit="25">
	                <query>in:inbox subject:${message.subject2}</query>	              
	            </SearchRequest>
	        </t:request>
	        <t:response>	        
	            <t:select path="//mail:SearchResponse//mail:m" emptyset="1" />		            
	        </t:response>
	     </t:test>
	     
	     <!-- Verify on Server that hard deleted mail is not present in Trash folder -->			 	
	     <t:test>
	        <t:request>
	            <SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="dateDesc" offset="0" limit="25">
	                <query>in:trash subject:${message.subject2}</query>	              
	            </SearchRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//mail:SearchResponse//mail:m" emptyset="1" />		            
	        </t:response>
	     </t:test>

		<!-- Verify on Server that hard deleted mail is present in Dumpster folder -->			     
	    <t:test>
	        <t:request>
	            <SearchRequest xmlns="urn:zimbraMail" types="message" sortBy="dateDesc" offset="0" limit="25">
	                <query>-in:/Junk subject:${message.subject2}</query>
	                <inDumpster>1</inDumpster>	              
	            </SearchRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//mail:SearchResponse//mail:su" match="${message.subject2}" />	
	            <t:select path="//mail:SearchResponse//mail:m" attr="id" set="mail_id_wc2" />	            
	        </t:response>
	     </t:test>	     	      
	</t:test_case>		
</t:tests>