<?xml version="1.0" encoding="UTF-8"?><t:tests xmlns:t="urn:zimbraTestHarness">
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}" />
	<t:property name="test_account1.username"
		value="test1${TIME}.${COUNTER}" />		
	<t:property name="test_account1.name"
		value="${test_account1.username}@${defaultdomain.name}" />		
	<t:property name="test_account1.password" value="test123" />	
	<t:property name="test_account2.username"
		value="test2${TIME}.${COUNTER}" />
	<t:property name="test_account2.name"
		value="${test_account2.username}@${defaultdomain.name}" />
	<t:property name="test_account2.password" value="test123" />
	<t:property name="test_account3.username"
		value="test3${TIME}.${COUNTER}" />		
	<t:property name="test_account3.name"
		value="${test_account3.username}@${defaultdomain.name}" />		
	<t:property name="test_account3.password" value="test123" />	
	<t:property name="test_acct.server" value="NOT_DEFINED" />	
	<t:property name="message.subject" value="test forward subject" />	
	<t:property name="message.content" value=" test forward content" />	
	<t:property name="message.forward_subject" value="test forward subject" />		
	<t:property name="message.subject1" value="FW: test forward subject" />	
	<t:property name="message.content1" value="Test forward content1" />	
	<t:property name="message.forward_subject1" value="FW: test forward subject" />	
	<t:test_case testcaseid="acct_setup" type="always">
		<t:objective>Create a test account</t:objective>
		<steps>
			1. Login to admin account
			2. Create a test_account1
		</steps>

		<t:test id="admin_login" required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="create_test_account1" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account1.name}</name>
					<password>${test_account1.password}</password>
					<a n="zimbraFeatureEwsEnabled">TRUE</a>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account1.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="test_acct.server" />
			</t:response>
		</t:test>
		
		<t:test id="create_test_account2" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account2.name}</name>
					<password>${test_account2.password}</password>
					<a n="zimbraFeatureEwsEnabled">TRUE</a>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account2.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="test_acct.server" />
			</t:response>
		</t:test>
		
		<t:test id="create_test_account3" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account3.name}</name>
					<password>${test_account3.password}</password>
					<a n="zimbraFeatureEwsEnabled">TRUE</a>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account3.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="test_acct.server" />
			</t:response>
		</t:test>
	</t:test_case>
		
	
		
	<t:test_case testcaseid="ForwardPlainText_From_EWS" type="smoke">
			<t:objective>Send HTML mail from user1 To user2 from ZWC and sync on EWS. Then forward same mail to user3 from EWS.
			</t:objective>
			<t:steps>1. Compose and send HTML text mail from user1 from ZWC
					2. Sync on EWS client for received mail.
					3. Forward same mail to user3 from EWS
			</t:steps>
			
					<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${test_account1.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>		
			
		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a='${test_account2.name}' />						
						<su>${message.subject}</su>
						<mp ct="text/html">
							<content>${message.content}</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="message1.id" />
			</t:response>
		</t:test>
		
		<t:delay msec="5000"/>
		
		<t:test required="true">
			<t:request ews="true" username="${test_account2.name}" password="${test_account2.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<GetFolder
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<FolderShape>
								<t:BaseShape>AllProperties</t:BaseShape>
							</FolderShape>
							<FolderIds>
								<t:DistinguishedFolderId Id="inbox">
									<t:Mailbox>
										<t:EmailAddress>${test_account2.name}</t:EmailAddress>
									</t:Mailbox>
								</t:DistinguishedFolderId>
							</FolderIds>
						</GetFolder>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]" attr="ResponseClass"
					match="Success" />
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:FolderId"
					attr="Id" match="2" />
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:FolderId"
					attr="Id" set="inbox.id" />
				<t:select
					path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:DisplayName"
					match="Inbox" />
			</t:response>
		</t:test>
		
		<t:test>
			<t:request ews="true" username="${test_account2.name}" password="${test_account2.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<SyncFolderItems
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<ItemShape>
								<t:BaseShape>IdOnly</t:BaseShape>
							</ItemShape>
							<SyncFolderId>
								<t:FolderId Id="${inbox.id}" />
							</SyncFolderId>
							<SyncState />
							<Ignore />
							<MaxChangesReturned>512</MaxChangesReturned>
						</SyncFolderItems>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:SyncFolderItemsResponseMessage"
					attr="ResponseClass" match="Success" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewstype:Create//ewstype:ItemId"
					attr="Id" set="mail_id" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewstype:Create//ewstype:ItemId"
					attr="ChangeKey" set="mail_changeKey" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewsmsg:SyncState"
				    set="SyncState0" />
			</t:response>		
		</t:test>	
		
		<t:test>
			<t:request ews="true" username="${test_account2.name}" password="${test_account2.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<GetItem
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<ItemShape>
								<t:BaseShape>IdOnly</t:BaseShape>
								<t:BodyType>Best</t:BodyType>
								<t:AdditionalProperties>
									<t:FieldURI FieldURI="item:Sensitivity" />
									<t:ExtendedFieldURI PropertyTag="0x10F4"
										PropertyType="Boolean" />
									<t:FieldURI FieldURI="item:Body" />
									<t:FieldURI FieldURI="message:From" />
									<t:FieldURI FieldURI="message:Sender" />
									<t:FieldURI FieldURI="item:Subject" />
									<t:FieldURI FieldURI="message:IsRead" />
									<t:FieldURI FieldURI="message:ToRecipients" />								
								</t:AdditionalProperties>
							</ItemShape>
							<ItemIds>
								<t:ItemId Id="${mail_id}" ChangeKey="${mail_changeKey}" />
							</ItemIds>
						</GetItem>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:GetItemResponseMessage" attr="ResponseClass"
					match="Success" />
				<t:select path="//ewsmsg:GetItemResponseMessage//ewstype:Subject"
					match="${message.subject}" />
				<t:select path="//ewsmsg:GetItemResponseMessage//ewstype:Body"  contains="${message.content}" />
				<t:select path="//ewsmsg:GetItemResponseMessage//ewstype:ToRecipients//ewstype:EmailAddress" match="${test_account2.name}" />			
			</t:response>
		</t:test>
		
		
		
	<t:test>
			<t:request ews="true" username="${test_account2.name}" password="${test_account2.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>				
						<CreateItem xmlns="http://schemas.microsoft.com/exchange/services/2006/messages" MessageDisposition="SendAndSaveCopy">
							<SavedItemFolderId>
								<t:FolderId Id="5"/>
							</SavedItemFolderId>
								<Items>
									<t:Message>
										<t:MimeContent CharacterSet="UTF-8"></t:MimeContent>
										<t:Sensitivity>Normal</t:Sensitivity>
										<t:Importance>Normal</t:Importance>
										<t:ExtendedProperty>
											<t:ExtendedFieldURI PropertyTag="0x0E07" PropertyType="Integer"/>
											<t:Value>12</t:Value>
										</t:ExtendedProperty>
										<t:ExtendedProperty>
											<t:ExtendedFieldURI PropertyTag="0xE9F" PropertyType="StringArray"/>
											<t:Values>
												<t:Value>:R:3</t:Value>
											</t:Values>
										</t:ExtendedProperty>
										<t:ToRecipients>
											<t:Mailbox>
												<t:Name>${test_account3.username}</t:Name>
												<t:EmailAddress>${test_account3.name}</t:EmailAddress>
											</t:Mailbox>
										</t:ToRecipients>
										<t:From>
											<t:Mailbox>
												<t:Name>${test_account2.username}</t:Name>
												<t:EmailAddress>${test_account2.name}</t:EmailAddress>
											</t:Mailbox>
										</t:From>
										<t:IsRead>false</t:IsRead>
									</t:Message>
								</Items>
						</CreateItem>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:CreateItemResponseMessage" attr="ResponseClass"
					match="Success" />			
			</t:response>
		</t:test>	
					
					
						
		<t:test>
			<t:request ews="true" username="${test_account2.name}" password="${test_account2.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>	
						<SyncFolderItems xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<ItemShape>
								<t:BaseShape>IdOnly</t:BaseShape>
								<t:AdditionalProperties>
									<t:FieldURI FieldURI="item:ItemClass"/>
									<t:FieldURI FieldURI="item:DateTimeReceived"/>
									<t:FieldURI FieldURI="item:HasAttachments"/>
									<t:FieldURI FieldURI="item:Categories"/>
									<t:FieldURI FieldURI="item:ConversationId"/>
									<t:FieldURI FieldURI="item:DateTimeSent"/>
									<t:FieldURI FieldURI="message:From"/>
									<t:FieldURI FieldURI="item:Importance"/>
									<t:FieldURI FieldURI="item:Size"/>
									<t:FieldURI FieldURI="item:Subject"/>
									<t:FieldURI FieldURI="item:DisplayTo"/>
									<t:FieldURI FieldURI="item:IsAssociated"/>
									<t:FieldURI FieldURI="message:IsRead"/>
									<t:ExtendedFieldURI PropertyTag="0x1090" PropertyType="Integer"/>
									<t:ExtendedFieldURI PropertyTag="0x1081" PropertyType="Integer"/>
									<t:ExtendedFieldURI PropertyTag="0x1082" PropertyType="SystemTime"/>
									<t:ExtendedFieldURI PropertySetId="00020386-0000-0000-C000-000000000046" PropertyName="content-class" PropertyType="String"/>
									<t:FieldURI FieldURI="message:ConversationIndex"/>
									<t:FieldURI FieldURI="message:ConversationTopic"/>
									<t:FieldURI FieldURI="message:InternetMessageId"/>
									<t:FieldURI FieldURI="message:References"/>
									<t:FieldURI FieldURI="item:InReplyTo"/>
									<t:ExtendedFieldURI PropertyTag="0xf03" PropertyType="Binary"/>
									<t:ExtendedFieldURI PropertySetId="A98A1EF9-FF40-470B-A0D7-4D7DCE6A6462" PropertyName="WebExtNotifications" PropertyType="String"/>
									<t:ExtendedFieldURI PropertyTag="0x1213" PropertyType="Integer"/>
								</t:AdditionalProperties>
							</ItemShape>
							<SyncFolderId>
								<t:FolderId Id="2"/>
							</SyncFolderId>
							<SyncState>${SyncState0}</SyncState>
							<SyncScope>NormalAndAssociatedItems</SyncScope>
						</SyncFolderItems>   					
  					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:SyncFolderItemsResponseMessage"
					attr="ResponseClass" match="Success" />
				
			</t:response>
	</t:test>
	
		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${test_account3.name}</account>
					<password>${test_account3.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		    
		 <t:delay msec="5000"/>
		 
	    <t:test>
	        <t:request>
	            <SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="dateDesc" offset="0" limit="25">
	                <query>subject:"${message.forward_subject1}"</query>
	            </SearchRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//mail:SearchResponse//mail:su" match="${message.forward_subject1}" />	
	            <t:select path="//mail:SearchResponse//mail:m" attr="id" set="mail_id" />	            
	        </t:response>
	     </t:test>
	     
	      <t:test>
			<t:request>
				<GetMsgRequest xmlns="urn:zimbraMail">
					<m id="${mail_id}" />
				</GetMsgRequest>
			</t:request>
			<t:response>
				 <t:select path="//mail:GetMsgResponse//mail:e[@t='f'][@a='${test_account2.name}']" /> 		
				 <t:select path="//mail:GetMsgResponse//mail:e[@t='t'][@a='${test_account3.name}']" />                    
			</t:response>
		</t:test>	
		
	</t:test_case>



</t:tests>