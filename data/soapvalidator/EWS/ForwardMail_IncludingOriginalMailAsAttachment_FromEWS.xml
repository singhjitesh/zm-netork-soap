<t:tests xmlns:t="urn:zimbraTestHarness">
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}" />
	<t:property name="test_account1.username"
		value="test1${TIME}.${COUNTER}" />		
	<t:property name="test_account1.name"
		value="${test_account1.username}@${defaultdomain.name}" />		
	<t:property name="test_account1.password" value="test123" />	
	<t:property name="test_account2.username"
		value="test2${TIME}.${COUNTER}" />
	<t:property name="test_account2.name"
		value="${test_account2.username}@${defaultdomain.name}" />
	<t:property name="test_account2.password" value="test123" />
	<t:property name="test_account3.username"
		value="test3${TIME}.${COUNTER}" />		
	<t:property name="test_account3.name"
		value="${test_account3.username}@${defaultdomain.name}" />		
	<t:property name="test_account3.password" value="test123" />	
	<t:property name="test_acct.server" value="NOT_DEFINED" />	
	<t:property name="message.subject" value="Message test Subject1" />	
	<t:property name="message.content" value="Message test Content1" />			
	<t:property name="message.content1" value="Message test Content1 forward original mail as attachment" />	
	<t:property name="message.forward_subject1" value="FW: Message test Subject1" />
	<t:test_case testcaseid="acct_setup" type="always">
		<t:objective>Create a test account</t:objective>
		<steps>
			1. Login to admin account
			2. Create a test_account1
		</steps>

		<t:test id="admin_login" required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="create_test_account1" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account1.name}</name>
					<password>${test_account1.password}</password>
					<a n="zimbraFeatureEwsEnabled">TRUE</a>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account1.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="test_acct.server" />
			</t:response>
		</t:test>
		
		<t:test id="create_test_account2" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account2.name}</name>
					<password>${test_account2.password}</password>
					<a n="zimbraFeatureEwsEnabled">TRUE</a>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account2.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="test_acct.server" />
			</t:response>
		</t:test>
		
		<t:test id="create_test_account3" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account3.name}</name>
					<password>${test_account3.password}</password>
					<a n="zimbraFeatureEwsEnabled">TRUE</a>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account3.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="test_acct.server" />
			</t:response>
		</t:test>
	</t:test_case>

	<t:test_case testcaseid="ForwardMail_IncludeOriginalMailAsAttachment_FromEWS" type="smoke">
			<t:objective>Send mail from user1 To user2 from ZWC and sync on EWS. Then forward same mail to user3 from EWS and include original mail as attachment.
			</t:objective>
			<t:steps>1. Compose and send mail from user1 from ZWC
					2. Sync on EWS client for received mail.
					3. Forward same mail to user3 and include original mail as attachment from EWS
			</t:steps>
	
		<!-- Send an email from user1 to user2 using Server -->	
		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${test_account1.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>					
			
		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a='${test_account2.name}' />						
						<su>${message.subject}</su>
						<mp ct="text/plain">
							<content>${message.content}</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="message1.id" />
			</t:response>
		</t:test>
		
		<!-- Receive email on EWS for user2 -->
		<t:test required="true">
			<t:request ews="true" username="${test_account2.name}" password="${test_account2.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<GetFolder
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<FolderShape>
								<t:BaseShape>AllProperties</t:BaseShape>
							</FolderShape>
							<FolderIds>
								<t:DistinguishedFolderId Id="inbox">
									<t:Mailbox>
										<t:EmailAddress>${test_account2.name}</t:EmailAddress>
									</t:Mailbox>
								</t:DistinguishedFolderId>
							</FolderIds>
						</GetFolder>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]" attr="ResponseClass"
					match="Success" />
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:FolderId"
					attr="Id" match="2" />
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:FolderId"
					attr="Id" set="inbox.id" />
				<t:select
					path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:DisplayName"
					match="Inbox" />
			</t:response>
		</t:test>
		
		<t:test>
			<t:request ews="true" username="${test_account2.name}" password="${test_account2.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<SyncFolderItems
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<ItemShape>
								<t:BaseShape>IdOnly</t:BaseShape>
							</ItemShape>
							<SyncFolderId>
								<t:FolderId Id="${inbox.id}" />
							</SyncFolderId>
							<SyncState />
							<Ignore />
							<MaxChangesReturned>512</MaxChangesReturned>
						</SyncFolderItems>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:SyncFolderItemsResponseMessage"
					attr="ResponseClass" match="Success" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewstype:Create//ewstype:ItemId"
					attr="Id" set="mail_id" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewstype:Create//ewstype:ItemId"
					attr="ChangeKey" set="mail_changeKey" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewsmsg:SyncState"
				    set="SyncState0" />
			</t:response>		
		</t:test>	
		
		<t:test>
			<t:request ews="true" username="${test_account2.name}" password="${test_account2.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<GetItem
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<ItemShape>
								<t:BaseShape>IdOnly</t:BaseShape>
								<t:BodyType>Best</t:BodyType>
								<t:AdditionalProperties>
									<t:FieldURI FieldURI="item:Sensitivity" />
									<t:ExtendedFieldURI PropertyTag="0x10F4"
										PropertyType="Boolean" />
									<t:FieldURI FieldURI="item:Body" />
									<t:FieldURI FieldURI="message:From" />
									<t:FieldURI FieldURI="message:Sender" />
									<t:FieldURI FieldURI="item:Subject" />
									<t:FieldURI FieldURI="message:IsRead" />
									<t:FieldURI FieldURI="message:ToRecipients" />								
								</t:AdditionalProperties>
							</ItemShape>
							<ItemIds>
								<t:ItemId Id="${mail_id}" ChangeKey="${mail_changeKey}" />
							</ItemIds>
						</GetItem>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:GetItemResponseMessage" attr="ResponseClass"
					match="Success" />
				<t:select path="//ewsmsg:GetItemResponseMessage//ewstype:Subject"
					match="${message.subject}" />
				<t:select path="//ewsmsg:GetItemResponseMessage//ewstype:Body"  contains="${message.content}" />
				<t:select path="//ewsmsg:GetItemResponseMessage//ewstype:ToRecipients//ewstype:EmailAddress" match="${test_account2.name}" />			
			</t:response>
		</t:test>
		
		<!-- Forward above mail from user2 to user3 including original mail as attachment -->	
		<t:test>
			<t:request ews="true" username="${test_account2.name}" password="${test_account2.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>				
						<CreateItem xmlns="http://schemas.microsoft.com/exchange/services/2006/messages" MessageDisposition="SendAndSaveCopy">
					      <SavedItemFolderId>
					        <t:FolderId Id="5"/>
					      </SavedItemFolderId>
					      <Items>
					        <t:Message>
					          <t:MimeContent CharacterSet="UTF-8">VXNlci1BZ2VudDogTWljcm9zb2Z0LU1hY091dGxvb2svZi4yNi4wLjE3MDkwMgpTdWJqZWN0OiBGVzogTWVzc2FnZSB0ZXN0IFN1YmplY3QxCk1lc3NhZ2UtSUQ6IDwxRjM0RUY0OC05RTA5LTQyRUQtQUVDNC0wQkQxNjgyQ0VGQThAenFhLTI3Ni5lbmcuemltYnJhLmNvbT4KVGhyZWFkLVRvcGljOiBNZXNzYWdlIHRlc3QgU3ViamVjdDEKTWltZS12ZXJzaW9uOiAxLjAKQ29udGVudC10eXBlOiBtdWx0aXBhcnQvbWl4ZWQ7Cglib3VuZGFyeT0iQl8zNTk3NDA3MTA5XzEwMjYyNzUwNTYiCgo+IFRoaXMgbWVzc2FnZSBpcyBpbiBNSU1FIGZvcm1hdC4gU2luY2UgeW91ciBtYWlsIHJlYWRlciBkb2VzIG5vdCB1bmRlcnN0YW5kCnRoaXMgZm9ybWF0LCBzb21lIG9yIGFsbCBvZiB0aGlzIG1lc3NhZ2UgbWF5IG5vdCBiZSBsZWdpYmxlLgoKLS1CXzM1OTc0MDcxMDlfMTAyNjI3NTA1NgpDb250ZW50LXR5cGU6IG11bHRpcGFydC9hbHRlcm5hdGl2ZTsKCWJvdW5kYXJ5PSJCXzM1OTc0MDcxMDlfMzY3NTAzNTUxIgoKCi0tQl8zNTk3NDA3MTA5XzM2NzUwMzU1MQpDb250ZW50LXR5cGU6IHRleHQvcGxhaW47CgljaGFyc2V0PSJVVEYtOCIKQ29udGVudC10cmFuc2Zlci1lbmNvZGluZzogN2JpdAoKTWVzc2FnZSB0ZXN0IENvbnRlbnQxIGZvcndhcmQgb3JpZ2luYWwgbWFpbCBhcyBhdHRhY2htZW50CgoKLS1CXzM1OTc0MDcxMDlfMzY3NTAzNTUxCkNvbnRlbnQtdHlwZTogdGV4dC9odG1sOwoJY2hhcnNldD0iVVRGLTgiCkNvbnRlbnQtdHJhbnNmZXItZW5jb2Rpbmc6IHF1b3RlZC1wcmludGFibGUKCjxodG1sIHhtbG5zOm89M0QidXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTpvZmZpY2U6b2ZmaWNlIiB4bWxuczp3PTNEInVybjpzY2hlbWE9CnMtbWljcm9zb2Z0LWNvbTpvZmZpY2U6d29yZCIgeG1sbnM6bT0zRCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL29mZmljZS8yMD0KMDQvMTIvb21tbCIgeG1sbnM9M0QiaHR0cDovL3d3dy53My5vcmcvVFIvUkVDLWh0bWw0MCI+PGhlYWQ+PG1ldGEgbmFtZT0zRFRpdGxlIGM9Cm9udGVudD0zRCIiPjxtZXRhIG5hbWU9M0RLZXl3b3JkcyBjb250ZW50PTNEIiI+PG1ldGEgaHR0cC1lcXVpdj0zRENvbnRlbnQtVHlwZSBjb250ZT0KbnQ9M0QidGV4dC9odG1sOyBjaGFyc2V0PTNEdXRmLTgiPjxtZXRhIG5hbWU9M0RHZW5lcmF0b3IgY29udGVudD0zRCJNaWNyb3NvZnQgV29yZCAxPQo1IChmaWx0ZXJlZCBtZWRpdW0pIj48c3R5bGU+PCEtLQovKiBGb250IERlZmluaXRpb25zICovCkBmb250LWZhY2UKCXtmb250LWZhbWlseToiQ2FtYnJpYSBNYXRoIjsKCXBhbm9zZS0xOjAgMCAwIDAgMCAwIDAgMCAwIDA7fQpAZm9udC1mYWNlCgl7Zm9udC1mYW1pbHk6Q2FsaWJyaTsKCXBhbm9zZS0xOjIgMTUgNSAyIDIgMiA0IDMgMiA0O30KLyogU3R5bGUgRGVmaW5pdGlvbnMgKi8KcC5Nc29Ob3JtYWwsIGxpLk1zb05vcm1hbCwgZGl2Lk1zb05vcm1hbAoJe21hcmdpbjowY207CgltYXJnaW4tYm90dG9tOi4wMDAxcHQ7Cglmb250LXNpemU6MTIuMHB0OwoJZm9udC1mYW1pbHk6IkNhbGlicmkiLHNhbnMtc2VyaWY7fQphOmxpbmssIHNwYW4uTXNvSHlwZXJsaW5rCgl7bXNvLXN0eWxlLXByaW9yaXR5Ojk5OwoJY29sb3I6IzA1NjNDMTsKCXRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7fQphOnZpc2l0ZWQsIHNwYW4uTXNvSHlwZXJsaW5rRm9sbG93ZWQKCXttc28tc3R5bGUtcHJpb3JpdHk6OTk7Cgljb2xvcjojOTU0RjcyOwoJdGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTt9CnNwYW4uRW1haWxTdHlsZTE3Cgl7bXNvLXN0eWxlLXR5cGU6cGVyc29uYWwtY29tcG9zZTsKCWZvbnQtZmFtaWx5OiJDYWxpYnJpIixzYW5zLXNlcmlmOwoJY29sb3I6d2luZG93dGV4dDt9CnNwYW4ubXNvSW5zCgl7bXNvLXN0eWxlLXR5cGU6ZXhwb3J0LW9ubHk7Cgltc28tc3R5bGUtbmFtZToiIjsKCXRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7Cgljb2xvcjp0ZWFsO30KLk1zb0NocERlZmF1bHQKCXttc28tc3R5bGUtdHlwZTpleHBvcnQtb25seTsKCWZvbnQtZmFtaWx5OiJDYWxpYnJpIixzYW5zLXNlcmlmO30KQHBhZ2UgV29yZFNlY3Rpb24xCgl7c2l6ZTo1OTUuMHB0IDg0Mi4wcHQ7CgltYXJnaW46NzIuMHB0IDcyLjBwdCA3Mi4wcHQgNzIuMHB0O30KZGl2LldvcmRTZWN0aW9uMQoJe3BhZ2U6V29yZFNlY3Rpb24xO30KLS0+PC9zdHlsZT48L2hlYWQ+PGJvZHkgYmdjb2xvcj0zRHdoaXRlIGxhbmc9M0RFTi1VUyBsaW5rPTNEIiMwNTYzQzEiIHZsaW5rPTNEIiM5NTQ9CkY3MiI+PGRpdiBjbGFzcz0zRFdvcmRTZWN0aW9uMT48cCBjbGFzcz0zRE1zb05vcm1hbD48c3BhbiBzdHlsZT0zRCdmb250LXNpemU6MTEuMHA9CnQnPk1lc3NhZ2UgdGVzdCBDb250ZW50MSBmb3J3YXJkIG9yaWdpbmFsIG1haWwgYXMgYXR0YWNobWVudDxvOnA+PC9vOnA+PC9zcGE9Cm4+PC9wPjwvZGl2PjwvYm9keT48L2h0bWw+CgotLUJfMzU5NzQwNzEwOV8zNjc1MDM1NTEtLQoKCi0tQl8zNTk3NDA3MTA5XzEwMjYyNzUwNTYKQ29udGVudC10eXBlOiBtZXNzYWdlL3JmYzgyMgpDb250ZW50LWRpc3Bvc2l0aW9uOiBhdHRhY2htZW50CgpTdWJqZWN0OiBNZXNzYWdlIHRlc3QgU3ViamVjdDEKTWVzc2FnZS1JRDogPDE2MDM3NTI4MjUuNTY4LjE1MTQ1MTM4ODcwNzAuSmF2YU1haWwuemltYnJhQHpxYS0yNzYuZW5nLnppbWJyYS5jb20+ClRocmVhZC1Ub3BpYzogTWVzc2FnZSB0ZXN0IFN1YmplY3QxCk1pbWUtdmVyc2lvbjogMS4wCkNvbnRlbnQtdHlwZTogdGV4dC9wbGFpbjsKCWNoYXJzZXQ9IlVURi04IgpDb250ZW50LXRyYW5zZmVyLWVuY29kaW5nOiA3Yml0CgpNZXNzYWdlIHRlc3QgQ29udGVudDEKCgotLUJfMzU5NzQwNzEwOV8xMDI2Mjc1MDU2LS0KCg==</t:MimeContent>
					          <t:Sensitivity>Normal</t:Sensitivity>
					          <t:Importance>Normal</t:Importance>
					          <t:ExtendedProperty>
					            <t:ExtendedFieldURI PropertyTag="0x0E07" PropertyType="Integer"/>
					            <t:Value>12</t:Value>
					          </t:ExtendedProperty>
					          <t:ExtendedProperty>
					            <t:ExtendedFieldURI PropertyTag="0xE9F" PropertyType="StringArray"/>
					            <t:Values>
					              <t:Value>:R:0</t:Value>
					            </t:Values>
					          </t:ExtendedProperty>
					          <t:ToRecipients>
					            <t:Mailbox>
					              <t:Name>${test_account3.name}</t:Name>
					              <t:EmailAddress>${test_account3.name}</t:EmailAddress>
					            </t:Mailbox>
					          </t:ToRecipients>
					          <t:From>
					            <t:Mailbox>
					              <t:Name>${test_account2.name}</t:Name>
					              <t:EmailAddress>${test_account2.name}</t:EmailAddress>
					            </t:Mailbox>
					          </t:From>
					          <t:IsRead>false</t:IsRead>
					        </t:Message>
					      </Items>
					    </CreateItem>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:CreateItemResponseMessage" attr="ResponseClass"
					match="Success" />			
			</t:response>
		</t:test>	
				
		<t:test>
			<t:request ews="true" username="${test_account1.name}" password="${test_account1.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<SyncFolderItems
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<ItemShape>
								<t:BaseShape>IdOnly</t:BaseShape>
							</ItemShape>
							<SyncFolderId>
								<t:FolderId Id="5" />
							</SyncFolderId>
							<SyncState />
							<Ignore />
							<MaxChangesReturned>512</MaxChangesReturned>
						</SyncFolderItems>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:SyncFolderItemsResponseMessage"
					attr="ResponseClass" match="Success" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewstype:Create[1]//ewstype:ItemId"
					attr="Id" set="mail01_id" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewstype:Create[1]//ewstype:ItemId"
					attr="ChangeKey" set="mail01_changeKey" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewsmsg:SyncState"
				    set="SyncState01" />
			</t:response>		
		</t:test>
		
		<!-- Verify on Server that mail is sent including original mail as attachment -->
		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${test_account3.name}</account>
					<password>${test_account3.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		
		<t:delay msec="5000"/>
		    
	    <t:test>
	        <t:request>
	            <SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="dateDesc" offset="0" limit="25">
	                <query>subject:"${message.forward_subject1}"</query>
	            </SearchRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//mail:SearchResponse//mail:su" match="${message.forward_subject1}" />	
	            <t:select path="//mail:SearchResponse//mail:m" attr="id" set="mail_id" />	            
	        </t:response>
	     </t:test>
	     
	      <t:test>
			<t:request>
				<GetMsgRequest xmlns="urn:zimbraMail">
					<m id="${mail_id}" />
				</GetMsgRequest>
			</t:request>
			<t:response>
				 <t:select path="//mail:GetMsgResponse//mail:e[@t='f'][@a='${test_account2.name}']" /> 		
				 <t:select path="//mail:GetMsgResponse//mail:e[@t='t'][@a='${test_account3.name}']" />        
				 <t:select path="//mail:GetMsgResponse//mail:mp" attr="cd" match="attachment" />                
			</t:response>
		</t:test>	
		
	</t:test_case>



</t:tests>