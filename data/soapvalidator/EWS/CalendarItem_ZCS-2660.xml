<t:tests xmlns:t="urn:zimbraTestHarness">

	<!-- Following bug is included as part of this testcase -->
	<!-- zcs-2660:- Organiser receives HTML tags in declination mail sent from 
		MacOutlook invitee. -->

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}" />

	<t:property name="test_account1.username" value="test1${TIME}.${COUNTER}" />
	<t:property name="test_account1.name"
		value="${test_account1.username}@${defaultdomain.name}" />
	<t:property name="test_account1.password" value="test123" />

	<t:property name="test_account2.username" value="test2${TIME}.${COUNTER}" />
	<t:property name="test_account2.name"
		value="${test_account2.username}@${defaultdomain.name}" />
	<t:property name="test_account2.password" value="test123" />


	<t:property name="appointment.subject" value="appsubject1${TIME}.${COUNTER}" />
	<t:property name="appointment.content" value="appcont1${TIME}.${COUNTER}" />


	<t:test_case testcaseid="acct_setup" type="always">
		<t:objective>Create a test account</t:objective>
		<steps>
			1. Login to admin account
			2. Create a test_account1
		</steps>

		<t:test id="admin_login" required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="create_test_account1" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account1.name}</name>
					<password>${test_account1.password}</password>
					<a n="zimbraFeatureEwsEnabled">TRUE</a>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account1.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="test_acct.server" />
			</t:response>
		</t:test>

		<t:test id="create_test_account1" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account2.name}</name>
					<password>${test_account2.password}</password>
					<a n="zimbraFeatureEwsEnabled">TRUE</a>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account2.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="test_acct.server" />
			</t:response>
		</t:test>

	</t:test_case>



	<t:test_case testcaseid="zcs2660_TC1" type="smoke">
		<t:objective>Declining a forwarded meeting from EWS client should not
			post html tags in organiser's ZWC
		</t:objective>
		<t:steps>1. User 2 sends an ALl day meeting request to user 1 from
			ZWC.
			2. User 1 forwards the request to admin user from EWS client.
			3.
			User 1 now deletes the meeting request.
			4. Verify on user 2 the
			decline mail should not have html content in the body.
		</t:steps>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${test_account2.name}</account>
					<password>${test_account2.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:property name="timezone.pst"
			value="(GMT-08.00) Pacific Time (US &amp; Canada) / Tijuana" />
		<t:property name="timezone.pst.regex" value="America\/Los_Angeles" />
		<t:property name="time.20190101120000.gmt" value="1546344000000" />
		<t:property name="time.20190101120000.pst" value="${TIME(-8h)[${time.20190101120000.gmt}]}" />

		<t:test>
			<t:request>
				<CreateAppointmentRequest xmlns="urn:zimbraMail">
					<m>
						<inv>
							<comp status="CONF" fb="B" transp="O" allDay="1"
								name="${appointment.subject}">
								<or a="${test_account2.name}" />
								<at a="${test_account1.name}" role="REQ" ptst="NE" rsvp="1" />
								<s d="${ICALTIME[${time.20190101120000.pst}]}" tz="${timezone.pst}" />
								<e d="${ICALTIME(+1h)[${time.20190101120000.pst}]}" tz="${timezone.pst}" />
							</comp>
						</inv>
						<e a="${test_account1.name}" t="t" />
						<su>${appointment.subject}</su>
						<mp ct="text/plain">
							<content>${appointment.content}</content>
						</mp>
					</m>
				</CreateAppointmentRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:CreateAppointmentResponse">
					<t:select attr="calItemId" set="organizer1.appt1.calItemId" />
					<t:select attr="invId" set="organizer1.appt1.invId" />
				</t:select>
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request ews="true" username="${test_account1.name}"
				password="${test_account1.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<GetFolder
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<FolderShape>
								<t:BaseShape>AllProperties</t:BaseShape>
							</FolderShape>
							<FolderIds>
								<t:DistinguishedFolderId Id="calendar">
									<t:Mailbox>
										<t:EmailAddress>${test_account1.name}</t:EmailAddress>
									</t:Mailbox>
								</t:DistinguishedFolderId>
							</FolderIds>
						</GetFolder>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]" attr="ResponseClass"
					match="Success" />
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:FolderId"
					attr="Id" match="10" />
				<t:select path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:FolderId"
					attr="Id" set="calendar.id" />
				<t:select
					path="//ewsmsg:GetFolderResponseMessage[1]//ewstype:DisplayName"
					match="Calendar" />
			</t:response>
		</t:test>

		<t:test>
			<t:request ews="true" username="${test_account1.name}"
				password="${test_account1.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<SyncFolderItems
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<ItemShape>
								<t:BaseShape>IdOnly</t:BaseShape>
							</ItemShape>
							<SyncFolderId>
								<t:DistinguishedFolderId Id="calendar" />
							</SyncFolderId>
							<SyncState />
							<Ignore />
							<MaxChangesReturned>512</MaxChangesReturned>
						</SyncFolderItems>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:SyncFolderItemsResponseMessage"
					attr="ResponseClass" match="Success" />
				<t:select path="//ewsmsg:SyncFolderItemsResponse//ewsmsg:SyncState"
					set="SyncState01" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewstype:Create//ewstype:ItemId"
					attr="ChangeKey" set="cal01_changeKey" />
				<t:select
					path="//ewsmsg:SyncFolderItemsResponse//ewstype:Create//ewstype:ItemId"
					attr="Id" set="cal01_id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request ews="true" username="${test_account1.name}"
				password="${test_account1.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<GetItem
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">
							<m:ItemShape>
								<t:BaseShape>Default</t:BaseShape>
								<t:IncludeMimeContent>false</t:IncludeMimeContent>
								<t:BodyType>Text</t:BodyType>
								<t:AdditionalProperties>
									<t:FieldURI FieldURI="calendar:CalendarItemType" />
									<t:FieldURI FieldURI="item:Body" />
									<t:FieldURI FieldURI="calendar:AppointmentSequenceNumber" />
								</t:AdditionalProperties>
							</m:ItemShape>
							<ItemIds>
								<t:ItemId Id="${cal01_id}" ChangeKey="${cal01_changeKey}" />
							</ItemIds>
						</GetItem>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:GetItemResponseMessage" attr="ResponseClass"
					match="Success" />
				<t:select path="//ewsmsg:GetItemResponseMessage//ewstype:ItemId"
					attr="ChangeKey" set="getItem_ck" />
				<t:select path="//ewsmsg:GetItemResponseMessage//ewstype:ItemId"
					attr="Id" set="getItem_id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request ews="true" username="${test_account1.name}"
				password="${test_account1.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<CreateItem
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages"
							MessageDisposition="SendAndSaveCopy" SendMeetingInvitations="SendToAllAndSaveCopy">
							<Items>
								<t:ForwardItem>
									<t:Subject>FW: ${appointment.subject}</t:Subject>
									<t:Body BodyType="HTML">${appointment.content}</t:Body>
									<t:ToRecipients>
										<t:Mailbox>
											<t:Name>${admin.user}</t:Name>
											<t:EmailAddress>${admin.user}</t:EmailAddress>
										</t:Mailbox>
									</t:ToRecipients>
									<t:ReferenceItemId Id="${getItem_id}"
										ChangeKey="${getItem_ck}" />
								</t:ForwardItem>
							</Items>
						</CreateItem>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:CreateItemResponseMessage" attr="ResponseClass"
					match="Success" />
			</t:response>
		</t:test>

		<t:test>
			<t:request ews="true" username="${test_account1.name}"
				password="${test_account1.password}">
				<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
					<soap:Body>
						<CreateItem
							xmlns="http://schemas.microsoft.com/exchange/services/2006/messages"
							MessageDisposition="SendAndSaveCopy" SendMeetingInvitations="SendToAllAndSaveCopy">
							<Items>
								<t:DeclineItem>
									<t:ReferenceItemId Id="${getItem_id}" />
								</t:DeclineItem>
							</Items>
						</CreateItem>
					</soap:Body>
				</soap:Envelope>
			</t:request>
			<t:response>
				<t:select path="//ewsmsg:CreateItemResponseMessage" attr="ResponseClass"
					match="Success" />
			</t:response>
		</t:test>
		
		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${test_account2.name}</account>
					<password>${test_account2.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		
		<t:delay sec="10"/>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="conversation"
					sortBy="dateDesc" offset="0" limit="25">
					<query>in:inbox from:${test_account1.name}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select
					path="//mail:SearchResponse/mail:c//mail:su[contains(text(),'Decline')]/following-sibling::mail:m"
					attr="id" set="decline_id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<GetMsgRequest xmlns="urn:zimbraMail">
					<m id="${decline_id}" />
				</GetMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetMsgResponse/mail:m" />
				<t:select path="//mail:GetMsgResponse//mail:mp//mail:content"
					contain="${test_account1.name} has declined your invitation. -----Original Invite----- ${appointment.content}" />
			</t:response>
		</t:test>

	</t:test_case>
</t:tests>