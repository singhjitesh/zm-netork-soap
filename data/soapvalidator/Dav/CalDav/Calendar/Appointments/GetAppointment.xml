<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="user${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.name.encoded" value="${account1.name}" urlencode="true"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
	<t:objective>basic system check</t:objective>

	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always" >
	<t:objective>create test account</t:objective>

	<t:test required="true" >
		<t:request>
	  		<AuthRequest xmlns="urn:zimbraAdmin">
	    		<name>${admin.user}</name>
	    		<password>${admin.password}</password>
	  		</AuthRequest>
	 	</t:request>
	 	<t:response>
	    	<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
	 	</t:response>
	</t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="account1.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>


</t:test_case>


<t:test_case testcaseid="CalDav_Calendar_GetAppointment_01" type="smoke">
	<t:objective>Get an appointment using CalDav</t:objective>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    

	<t:property name="appointment.subject" value="Subject${TIME}.${COUNTER}"/>
	<t:property name="appointment.location" value="Location${TIME}.${COUNTER}"/>
	<t:property name="appointment.content" value="Content${TIME}.${COUNTER}"/>
	<t:property name="time.20071201120000.gmt" value="1196510400000"/>
   
    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv > 
                    	<comp method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" >
	                        <s d="${ICALTIME[${time.20071201120000.gmt}]}"/>  
	                        <e d="${ICALTIME(+1h)[${time.20071201120000.gmt}]}"/>  
	                        <or a="${account1.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>MessageSubject${TIME}${COUNTER}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="invId" set="appointment.invId"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${appointment.invId}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse">
            	<t:select path="//mail:comp" attr="uid" set="appointment.uid"/>
            </t:select>
        </t:response>
    </t:test>
    
	<t:property name="caldav.user" value="${account1.name}"/>
	<t:property name="caldav.password" value="${defaultpassword.value}"/>
	<t:property name="caldav.server" value="${account1.server}"/>

	<t:caldav >
		<t:request method="REPORT" uri="/dav/${account1.name}/Calendar/" depth="1">
			<calendar-query xmlns:D="DAV:" xmlns="urn:ietf:params:xml:ns:caldav">
			  	<D:prop>
			    	<D:getetag/>
		  		</D:prop>
			  	<filter>
			    	<comp-filter name="VCALENDAR">
			      		<comp-filter name="VTODO"/>
			    	</comp-filter>
			  	</filter>
			</calendar-query>
	 	</t:request>
	 	<t:response>
			<t:select path="//D:response">
				<t:select path="//D:href" match=".*${appointment.uid}.*" set="appointment.href"/>
				<t:select path="//D:getetag" set="appointment.etag"/>
			</t:select>
	 	</t:response>
	</t:caldav>

	<t:caldav >
		<t:request method="REPORT" uri="/dav/${account1.name}/Calendar/" depth="1">
			<calendar-multiget xmlns:D="DAV:" xmlns="urn:ietf:params:xml:ns:caldav">
			  	<D:prop>
			    	<D:getetag/>
			    	<calendar-data/>
			  	</D:prop>
			  	<D:href>${appointment.href}</D:href>
			  	<D:href>${appointment.href}</D:href>
			</calendar-multiget>
	 	</t:request>
	 	<t:response>
			<t:select path="//D:response">
				<t:select path="//D:href" match=".*${appointment.href}.*"/>
				<t:select path="//D:getetag" match="${appointment.etag}.*"/>
				<t:select path="//C:calendar-data" match="(?s).*SUMMARY:${appointment.subject}.*"/>
			</t:select>
	 	</t:response>
	</t:caldav>

</t:test_case>


</t:tests>
