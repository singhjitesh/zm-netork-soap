<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.user" value="user${TIME}${COUNTER}"/>
<t:property name="account1.name" value="${account1.user}@${defaultdomain.name}"/>
<t:property name="account1.name.encoded" value="${account1.user}%40${defaultdomain.name}"/>

<t:property name="account2.user" value="user${TIME}${COUNTER}"/>
<t:property name="account2.name" value="${account2.user}@${defaultdomain.name}"/>
<t:property name="account2.name.encoded" value="${account2.user}%40${defaultdomain.name}"/>

<t:property name="timezone.pst" value="(GMT-08.00) Pacific Time (US &amp; Canada) / Tijuana"/>
<t:property name="timezone.pst.regex" value="America\/Los_Angeles"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
	<t:objective>basic system check</t:objective>

	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always" >
	<t:objective>create test account</t:objective>

	<t:test required="true" >
		<t:request>
	  		<AuthRequest xmlns="urn:zimbraAdmin">
	    		<name>${admin.user}</name>
	    		<password>${admin.password}</password>
	  		</AuthRequest>
	 	</t:request>
	 	<t:response>
	    	<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
	 	</t:response>
	</t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  


</t:test_case>


<t:test_case testcaseid="CalDav_Calendar_CreateMeetingRequest_02" type="smoke" bugids="40185">
	<t:objective>Verify the meeting attendee receives an invitation to a meeting request </t:objective>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
	<t:property name="appointment.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="appointment.content" value="content${TIME}${COUNTER}"/>
	<t:property name="date.20091201120000.gmt" value="1259668800000"/>
	<t:property name="date.20091201120000.pst" value="${TIME(-8h)[${date.20091201120000.gmt}]}"/>

    <t:test>
        <t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv>
						<comp status="CONF" fb="B" transp="O" allDay="0" name="${appointment.subject}">
							<or a="${account1.name}"/>
							<at a="${account2.name}" role="REQ" ptst="NE" rsvp="1"/>
							<s d="${ICALTIME[${date.20091201120000.gmt}]}" tz="${timezone.pst}" />
							<e  d="${ICALTIME(+1h)[${date.20091201120000.gmt}]}" tz="${timezone.pst}" />
						</comp>
					</inv>
					<e a="${account2.name}" t="t"/>
					<su>${appointment.subject}</su>
					<mp ct="text/plain">
						<content>${appointment.content}</content>
					</mp>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test required="true" >
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${appointment.subject})</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse">
            	<t:select path="//mail:m">
            		<t:select attr="id" set="message.id"/>
            		<t:select path="//mail:comp" attr="uid" set="appointment.uid"/>
            	</t:select>
            </t:select> 
        </t:response>
    </t:test>

	<t:property name="caldav.user" value="${account2.name}"/>
	<t:property name="caldav.password" value="${defaultpassword.value}"/>
	<t:property name="caldav.server" value="${account2.server}"/>


	<t:caldav >
		<t:request method="PROPFIND" uri="/dav/${account2.name.encoded}/Inbox/" depth="1">
			<x0:propfind xmlns:x0="DAV:">
				<x0:prop>
					<x0:getetag/>
					<x0:resourcetype/>
				</x0:prop>
			</x0:propfind>
	 	</t:request>
	 	<t:response>
			<t:select path="//D:response[D:href='/dav/${account2.name.encoded}/Inbox/${appointment.uid},${message.id}.ics']"/>
	 	</t:response>
	</t:caldav>


</t:test_case>


</t:tests>
