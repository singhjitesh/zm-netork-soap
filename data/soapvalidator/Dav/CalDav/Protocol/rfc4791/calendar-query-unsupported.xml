<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="user${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.name.encoded" value="${account1.name}" urlencode="true"/>

<t:property name="account2.name" value="user${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name.encoded" value="${account2.name}" urlencode="true"/>

<t:property name="timezone.pst" value="America/Los_Angeles"/>
<t:property name="timezone.pst.regex" value="America\\/Los_Angeles"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
	<t:objective>basic system check</t:objective>

	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always" >
	<t:objective>create test account</t:objective>

	<t:test required="true" >
		<t:request>
	  		<AuthRequest xmlns="urn:zimbraAdmin">
	    		<name>${admin.user}</name>
	    		<password>${admin.password}</password>
	  		</AuthRequest>
	 	</t:request>
	 	<t:response>
	    	<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
	 	</t:response>
	</t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  
</t:test_case>


<t:test_case testcaseid="CalDav_Protocol_Unsupported_Query_01" type="smoke" bugids="43694">
	<t:objective>Verify error is returned for unsupported query by CalDav</t:objective>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

   <t:property name="appointment.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>

	<t:property name="time.20180101120000.gmt" value="1514808000000"/>
	<t:property name="time.20180101120000.pst" value="${TIME(-8h)[${time.20180101120000.gmt}]}"/>

    <t:test>
        <t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv>
						<comp status="CONF" fb="B" transp="O" allDay="1" name="${appointment.subject}">
							<s d="${CURRDATE[${time.20180101120000.pst}]}" tz="${timezone.pst}" />
							<e  d="${CURRDATE(+3h)[${time.20180101120000.pst}]}" tz="${timezone.pst}" />
							<or a="${account1.name}"/>
							<uid>plain</uid>
						</comp>
					</inv>
					<su>${appointment.subject}</su>
					<mp ct="text/plain">
						<content>${appointment.content}</content>
					</mp>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="calItemId" set="appt1.calItemId"/>
            	<t:select attr="invId" set="appt1.invId"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateTaskRequest xmlns="urn:zimbraMail">
				<m >
					<inv>
						<comp status="CONF" fb="B" transp="O" allDay="1" name="${appointment.subject}">
							<s d="${CURRDATE[${time.20180101120000.pst}]}" tz="${timezone.pst}" />
							<e  d="${CURRDATE(+3h)[${time.20180101120000.pst}]}" tz="${timezone.pst}" />
							<or a="${account1.name}"/>
						</comp>
					</inv>
					<su>${appointment.subject}</su>
					<mp ct="text/plain">
						<content>${appointment.content}</content>
					</mp>
				</m>
			</CreateTaskRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTaskResponse">
            	<t:select attr="calItemId" set="appt1.calItemId"/>
            	<t:select attr="invId" set="appt1.invId"/>
            </t:select>
        </t:response>
    </t:test>


    	<t:property name="caldav.user" value="${account1.name}"/>
	<t:property name="caldav.password" value="${defaultpassword.value}"/>
	<t:property name="caldav.server" value="${account1.server}"/>
		
	
	<t:caldav >
		<t:request method="REPORT" uri="/dav/${account1.name}/Calendar/" depth="0">
			<C:calendar-query xmlns:C="urn:ietf:params:xml:ns:caldav">
			        <D:prop xmlns:D="DAV:">
			    <D:getetag/>
			    <C:calendar-data/>
			  </D:prop>
			  <C:filter>
			    <C:comp-filter name="VCALENDAR">
			      <C:comp-filter name="VEVENT">
				<C:prop-filter name="X-ABC-GUID">
				  <C:text-match>ABC</C:text-match>
				</C:prop-filter>
			      </C:comp-filter>
			    </C:comp-filter>
			  </C:filter>
			</C:calendar-query>
		</t:request>
		<t:response>
			<t:select path="//D:error" emptyset="1"/>
		</t:response>
	</t:caldav>


</t:test_case>

</t:tests>